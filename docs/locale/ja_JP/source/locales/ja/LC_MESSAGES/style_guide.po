# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-19 19:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/style_guide.md:1
msgid "# Style guide for contributors"
msgstr ""

#: ../../source/style_guide.md:3
msgid "**Audience**: documentation writers and editors"
msgstr ""

#: ../../source/style_guide.md:5
msgid ""
"While this style guide will also refer to best practices using "
"ReStructured Text (also known as RST), in general we advise writing "
"documentation in Markdown, as it's a more universally accepted "
"documentation standard. Both formats are usable, however, and if you "
"decide to write a topic in RST (or are editing an RST topic), be sure to "
"refer to this style guide."
msgstr ""

#: ../../source/style_guide.md:7
msgid ""
"**When in doubt, use the docs themselves for guidance on how to format "
"things.**"
msgstr ""

#: ../../source/style_guide.md:9
msgid ""
"[For RST formatting](http://hyperledger-"
"fabric.readthedocs.io/en/release-1.4/channel_update_tutorial.html)."
msgstr ""

#: ../../source/style_guide.md:11
msgid ""
"[For Markdown formatting](http://hyperledger-"
"fabric.readthedocs.io/en/release-1.4/peers/peers.html)."
msgstr ""

#: ../../source/style_guide.md:13
msgid ""
"If you just want to look at how things are formatted, you can navigate to"
" the Fabric repo to look at the raw file by clicking on `Edit on Github` "
"link in the upper right hand corner of the page. Then click the `Raw` "
"tab. This will show you the formatting of the doc. **Do not attempt to "
"edit the file on Github.** If you want to make a change, clone the repo "
"and follow the instructions in [Contributing](./CONTRIBUTING.html) for "
"creating pull requests."
msgstr ""

#: ../../source/style_guide.md:15
msgid "## Word choices"
msgstr ""

#: ../../source/style_guide.md:17
msgid ""
"**Avoid the use of the words \"whitelist\", \"blacklist\", \"master\", or"
" \"slave\".**"
msgstr ""

#: ../../source/style_guide.md:19
msgid ""
"Unless the use of these words is absolutely necessary (for example, when "
"quoting a section of code that uses them), do not use these words. Either"
" be more explicit (for example, describing what \"whitelisting\" actually"
" does) or find alternate words such as \"allowlist\" or \"blocklist\"."
msgstr ""

#: ../../source/style_guide.md:21
msgid "**Tutorials should have a list of steps at the top.**"
msgstr ""

#: ../../source/style_guide.md:23
msgid ""
"A list of steps (with links to the corresponding sections) at the "
"beginning of a tutorial helps users find particular steps they're "
"interested in. For an example, check out [Use private data in Fabric"
"](./private-data/private-data.html)."
msgstr ""

#: ../../source/style_guide.md:25
msgid "**\"Fabric\", \"Hyperledger Fabric\" or \"HLF\"?**"
msgstr ""

#: ../../source/style_guide.md:27
msgid ""
"The first usage should be “Hyperledger Fabric” and afterwards only "
"“Fabric”. Don't use \"HLF\" or \"Hyperledger\" by itself."
msgstr ""

#: ../../source/style_guide.md:29
msgid "**Chaincode vs. Chaincodes?**"
msgstr ""

#: ../../source/style_guide.md:31
msgid ""
"One chaincode is a “chaincode”. If you’re talking about several "
"chaincodes, use \"chaincodes\"."
msgstr ""

#: ../../source/style_guide.md:33
msgid "**Smart contracts?**"
msgstr ""

#: ../../source/style_guide.md:35
msgid ""
"Colloquially, smart contracts are considered equivalent to chaincode, "
"though at a technical level, it is more correct to say that a \"smart "
"contract\" is the business logic inside of a chaincode, which encompasses"
" the larger packaging and implementation."
msgstr ""

#: ../../source/style_guide.md:37
msgid "**JSON vs .json?**"
msgstr ""

#: ../../source/style_guide.md:39
msgid "Use “JSON”. The same applies for any file format (for example, YAML)."
msgstr ""

#: ../../source/style_guide.md:41
msgid "**curl vs cURL.**"
msgstr ""

#: ../../source/style_guide.md:43
msgid "The tool is called “cURL”. The commands themselves are “curl” commands."
msgstr ""

#: ../../source/style_guide.md:45
msgid "**Fabric CA.**"
msgstr ""

#: ../../source/style_guide.md:47
msgid ""
"Do not call it \"fabric-CA\", \"fabricCA\", or FabricCA. It is the Fabric"
" CA. The Fabric CA client binary can, however, be referred to as the "
"`fabric-ca-client`."
msgstr ""

#: ../../source/style_guide.md:49
msgid "**Raft and RAFT.**"
msgstr ""

#: ../../source/style_guide.md:51
msgid "\"Raft\" is not an acronym. Do not call it a \"RAFT ordering service\"."
msgstr ""

#: ../../source/style_guide.md:53
msgid "**Referring to the reader.**"
msgstr ""

#: ../../source/style_guide.md:55
msgid "It’s perfectly fine to use the “you” or “we”. Avoid using \"I\"."
msgstr ""

#: ../../source/style_guide.md:57
msgid "**Ampersands (&).**"
msgstr ""

#: ../../source/style_guide.md:59
msgid ""
"Not a substitute for the word “and”. Avoid them unless you have a reason "
"to use it (such as in a code snippet that includes it)."
msgstr ""

#: ../../source/style_guide.md:61
msgid "**Acronyms.**"
msgstr ""

#: ../../source/style_guide.md:63
msgid ""
"The first usage of an acronym should be spelled out, unless it’s an "
"acronym that’s in such wide usage this is unneeded. For example, "
"“Software Development Kit (SDK)” on first usage. Then use “SDK” "
"afterward."
msgstr ""

#: ../../source/style_guide.md:65
msgid "**Try to avoid using the same words too often.**"
msgstr ""

#: ../../source/style_guide.md:67
msgid ""
"If you can avoid using a word twice in one sentence, please do so. Not "
"using it more than twice in a single paragraph is better. Of course "
"sometimes it might not be possible to avoid this –-- a doc about the "
"state database being used is likely to be replete with uses of the word "
"“database” or “ledger”. But excessive usage of any particular word has a "
"tendency to have a numbing effect on the reader."
msgstr ""

#: ../../source/style_guide.md:69
msgid "**How should files be named?**"
msgstr ""

#: ../../source/style_guide.md:71
msgid ""
"By using underscores between words. Also, tutorials should be named as "
"such. For example, `identity_use_case_tutorial.md`. While not all files "
"use this standard, new files should adhere to it."
msgstr ""

#: ../../source/style_guide.md:73
msgid "## Formatting and punctuation"
msgstr ""

#: ../../source/style_guide.md:75
msgid "**Line lengths.**"
msgstr ""

#: ../../source/style_guide.md:77
msgid ""
"If you look at the raw versions of the documentation, you will see that "
"many topics conform to a line length of roughly 70 characters. This "
"restriction is no longer necessary, so you are free to make lines as long"
" as you want."
msgstr ""

#: ../../source/style_guide.md:79
msgid "**When to bold?**"
msgstr ""

#: ../../source/style_guide.md:81
msgid ""
"Not too often. The best use of them is either as a summary or as a way of"
" drawing attention to concepts you want to talk about. “A blockchain "
"network contains a ledger, at least one chaincode, and peers”, especially"
" if you’re going to be talking about those things in that paragraph. "
"Avoid using them simply to emphasize a single word, as in something like "
"\"Blockchain networks **must** use propery security protocols\"."
msgstr ""

#: ../../source/style_guide.md:83
msgid "**When to surround something in back tics `nnn`?**"
msgstr ""

#: ../../source/style_guide.md:85
msgid ""
"This is useful to draw attention to words that either don’t make sense in"
" plain English or when referencing parts of the code (especially if "
"you’ve put code snippets in your doc). So for example, when talking about"
" the fabric-samples directory, surround `fabric-samples` with back tics. "
"Same with a code function like `hf.Revoker`. It might also make sense to "
"put back tics around words that do make sense in plain English that are "
"part of the code if you're referencing them in a code context. For "
"example, when referencing an `attribute` as part of an Access Control "
"List."
msgstr ""

#: ../../source/style_guide.md:87
msgid "**Is it ever appropriate to use a dash?**"
msgstr ""

#: ../../source/style_guide.md:89
msgid ""
"Dashes can be incredibly useful but they're not necessarily as "
"technically appropriate as using separate declarative sentences. Let's "
"consider this example sentence:"
msgstr ""

#: ../../source/style_guide.md:91
msgid ""
"``` This leaves us with a trimmed down JSON object --- config.json, "
"located in the fabric-samples folder inside first-network --- which will "
"serve as the baseline for our config update. ```"
msgstr ""

#: ../../source/style_guide.md:95
msgid ""
"There are a number of ways to present this same information, but in this "
"case the dashes break up the information while keeping it as part of the "
"same thought. If you use a dash, make sure to use the \"em\" dash, which "
"is three times longer than a hyphen. These dashes should have a space "
"before and after them."
msgstr ""

#: ../../source/style_guide.md:97
msgid "**When to use hyphens?**"
msgstr ""

#: ../../source/style_guide.md:99
msgid ""
"Hyphens are mostly commonly used as part of a “compound adjective”. For "
"example, \"jet-powered car\". Note that the compound adjective must "
"immediately precede the noun being modified. In other words, \"jet "
"powered\" does not by itself need a hyphen. When in doubt, use Google, as"
" compound adjectives are tricky and are a popular discussion on grammar "
"discussion boards."
msgstr ""

#: ../../source/style_guide.md:101
msgid "**How many spaces after a period?**"
msgstr ""

#: ../../source/style_guide.md:103
msgid "One."
msgstr ""

#: ../../source/style_guide.md:105
msgid "**How should numbers be rendered?**"
msgstr ""

#: ../../source/style_guide.md:107
msgid ""
"Number zero through nine are spelled out. One, two, three, four, etc. "
"Numbers after 10 are rendered as numbers."
msgstr ""

#: ../../source/style_guide.md:109
msgid ""
"Exceptions to this would be usages from code. In that case, use "
"whatever’s in the code. And also examples like Org1. Don’t write it as "
"OrgOne."
msgstr ""

#: ../../source/style_guide.md:111
msgid "**Capitalization rules for doc titles.**"
msgstr ""

#: ../../source/style_guide.md:113
msgid ""
"The standard rules for capitalization in sentences should be followed. In"
" other words, unless a word is the first word in the title or a proper "
"noun, do not capitalize its first letter. For example, \"Understanding "
"Identities in Fabric\" should be \"Understanding identities in Fabric\". "
"While not every doc follows this standard yet, it is the standard we're "
"moving to and should be followed for new topics."
msgstr ""

#: ../../source/style_guide.md:115
msgid "Headings inside of topics should follow the same standard."
msgstr ""

#: ../../source/style_guide.md:117
msgid "**Use the Oxford comma?**"
msgstr ""

#: ../../source/style_guide.md:119
msgid "Yes, it’s better."
msgstr ""

#: ../../source/style_guide.md:121
msgid ""
"The classic example is, “I’d like to thank my parents, Ayn Rand and God”,"
" as compared to: “I’d like to thank my parents, Ayn Rand, and God.”"
msgstr ""

#: ../../source/style_guide.md:123
msgid "**Captions.**"
msgstr ""

#: ../../source/style_guide.md:125
msgid ""
"These should be in italics, and it’s the only real valid use for italics "
"in our docs."
msgstr ""

#: ../../source/style_guide.md:127
msgid "**Commands.**"
msgstr ""

#: ../../source/style_guide.md:129
msgid ""
"In general, put each command in its own snippet. It reads better, "
"especially when commands are long. An exception to this rule is when "
"suggesting the export of a number of environment variables."
msgstr ""

#: ../../source/style_guide.md:131
msgid "**Code snippets.**"
msgstr ""

#: ../../source/style_guide.md:133
msgid ""
"In Markdown, if you want to post sample code, use three back tics to set "
"off the snippet. For example:"
msgstr ""

#: ../../source/style_guide.md:135
msgid "``` Code goes here."
msgstr ""

#: ../../source/style_guide.md:138
msgid "Even more code goes here."
msgstr ""

#: ../../source/style_guide.md:140
msgid "And still more. ```"
msgstr ""

#: ../../source/style_guide.md:143
msgid ""
"In RST, you will need to set off the code snippet using formatting "
"similar to this:"
msgstr ""

#: ../../source/style_guide.md:145
msgid "``` .. code:: bash"
msgstr ""

#: ../../source/style_guide.md:148
msgid "Code goes here."
msgstr ""

#: ../../source/style_guide.md:149 ../../source/style_guide.md:168
#: ../../source/style_guide.md:184 ../../source/style_guide.md:202
#: ../../source/style_guide.md:229
msgid "```"
msgstr ""

#: ../../source/style_guide.md:151
msgid ""
"You can substitute `bash` for a language like Java or Go, where "
"appropriate."
msgstr ""

#: ../../source/style_guide.md:153
msgid "**Enumerated lists in markdown.**"
msgstr ""

#: ../../source/style_guide.md:155
msgid ""
"Note that in Markdown, enumerated lists will not work if you separate the"
" numbers with a space. Markdown sees this as the start of a new list, not"
" a continuation of the old one (every number will be `1.`). If you need "
"an enumerated list, you will have to use RST. Bulleted lists are a good "
"substitute in Markdown, and are the recommended alternative."
msgstr ""

#: ../../source/style_guide.md:157
msgid "**Linking.**"
msgstr ""

#: ../../source/style_guide.md:159
msgid ""
"When linking to another doc, use relative links, not direct links. When "
"naming a link, do not just call it \"link\". Use a more creative and "
"descriptive name. For accessibility reasons, the link name should also "
"make it clear that it is a link."
msgstr ""

#: ../../source/style_guide.md:161
msgid "**All docs have to end with a license statement.**"
msgstr ""

#: ../../source/style_guide.md:163
msgid "In RST, it’s this:"
msgstr ""

#: ../../source/style_guide.md:165
msgid ""
"``` .. Licensed under Creative Commons Attribution 4.0 International "
"License"
msgstr ""

#: ../../source/style_guide.md:167
msgid "https://creativecommons.org/licenses/by/4.0/"
msgstr ""

#: ../../source/style_guide.md:170
msgid "In markdown:"
msgstr ""

#: ../../source/style_guide.md:172
msgid ""
"``` <!--- Licensed under Creative Commons Attribution 4.0 International "
"License https://creativecommons.org/licenses/by/4.0/ --> ```"
msgstr ""

#: ../../source/style_guide.md:177
msgid "**How many spaces for indentation?**"
msgstr ""

#: ../../source/style_guide.md:179
msgid ""
"This will depend on the use case. Frequently it’s necessary, especially "
"in RST, to indent two spaces, especially in a code block. In a `.. "
"note::` box in RST, you have to indent to the space after the colon after"
" note, like this:"
msgstr ""

#: ../../source/style_guide.md:181
msgid ""
"``` .. note:: Some words and stuff etc etc etc (line continues until the "
"70 character limit line)"
msgstr ""

#: ../../source/style_guide.md:183
msgid "the line directly below has to start at the same space as the one above."
msgstr ""

#: ../../source/style_guide.md:186
msgid "**When to use which type of heading.**"
msgstr ""

#: ../../source/style_guide.md:188
msgid "In RST, use this:"
msgstr ""

#: ../../source/style_guide.md:190
msgid "``` Chapter 1 Title ==============="
msgstr ""

#: ../../source/style_guide.md:195
msgid "Section 1.1 Title"
msgstr ""

#: ../../source/style_guide.md:198
msgid "Subsection 1.1.1 Title"
msgstr ""

#: ../../source/style_guide.md:201
msgid "Section 1.2 Title"
msgstr ""

#: ../../source/style_guide.md:204
msgid ""
"Note that the length of what’s under the title has to be the same as the "
"length of the title itself. This isn’t a problem in Atom, which gives "
"each character the same width by default (this is called “monospacing”, "
"if you’re ever on Jeopardy! and need that information."
msgstr ""

#: ../../source/style_guide.md:206
msgid "In markdown, it’s somewhat simpler. You go:"
msgstr ""

#: ../../source/style_guide.md:208
msgid "``` # The Name of the Doc (this will get pulled for the TOC)."
msgstr ""

#: ../../source/style_guide.md:211
msgid "## First subsection"
msgstr ""

#: ../../source/style_guide.md:213
msgid "## Second subsection ```"
msgstr ""

#: ../../source/style_guide.md:216
msgid ""
"Both file formats don't like when these things are done out of order. For"
" example, you might want a `####` to be the first thing after your `#` "
"Title. Markdown won’t allow it. Similarly, RST will default to whatever "
"order you give to the title formats (as they appear in the first sections"
" of your doc)."
msgstr ""

#: ../../source/style_guide.md:218
msgid "**Relative links should be used whenever possible.**"
msgstr ""

#: ../../source/style_guide.md:220
msgid "For RST, the preferred syntax is: ```"
msgstr ""

#: ../../source/style_guide.md:222
msgid ":doc:`anchor text <relativepath>`"
msgstr ""

#: ../../source/style_guide.md:223
msgid "``` Do not put the .rst suffix at the end of the filepath."
msgstr ""

#: ../../source/style_guide.md:226
msgid "For Markdown, the preferred syntax is: ```"
msgstr ""

#: ../../source/style_guide.md:228
msgid "[anchor text](<relativepath>)"
msgstr ""

#: ../../source/style_guide.md:231
msgid ""
"For other files, such as text or YAML files, use a direct link to the "
"file in github for example:"
msgstr ""

#: ../../source/style_guide.md:234
msgid "[https://github.com/hyperledger/fabric/blob/master/docs/README.md](https://github.com/hyperledger/fabric/blob/master/docs/README.md)"
msgstr ""

#: ../../source/style_guide.md:236
msgid ""
"Relative links are unfortunately not working on github when browsing "
"through a RST file."
msgstr ""

#: ../../source/style_guide.md:239
msgid ""
"<!--- Licensed under Creative Commons Attribution 4.0 International "
"License https://creativecommons.org/licenses/by/4.0/ -->"
msgstr ""

