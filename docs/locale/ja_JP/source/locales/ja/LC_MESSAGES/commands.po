# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-19 19:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/commands/configtxgen.md:1
msgid "# configtxgen"
msgstr ""

#: ../../source/commands/configtxgen.md:3
msgid ""
"The `configtxgen` command allows users to create and inspect channel "
"config related artifacts.  The content of the generated artifacts is "
"dictated by the contents of `configtx.yaml`."
msgstr ""

#: ../../source/commands/configtxgen.md:7
#: ../../source/commands/configtxlator.md:8
#: ../../source/commands/cryptogen.md:7
#: ../../source/commands/peerchaincode.md:7
#: ../../source/commands/peerchannel.md:7
#: ../../source/commands/peercommand.md:11
#: ../../source/commands/peerlifecycle.md:15
#: ../../source/commands/peernode.md:7 ../../source/commands/peerversion.md:18
msgid "## Syntax"
msgstr ""

#: ../../source/commands/configtxgen.md:9
msgid ""
"The `configtxgen` tool has no sub-commands, but supports flags which can "
"be set to accomplish a number of tasks."
msgstr ""

#: ../../source/commands/configtxgen.md:12
msgid "## configtxgen ``` Usage of configtxgen:"
msgstr ""

#: ../../source/commands/configtxgen.md:15
msgid "-asOrg string"
msgstr ""

#: ../../source/commands/configtxgen.md:16
msgid ""
"Performs the config generation as a particular organization (by name), "
"only including values in the write set that org (likely) has privilege to"
" set"
msgstr ""

#: ../../source/commands/configtxgen.md:17
msgid "-channelCreateTxBaseProfile string"
msgstr ""

#: ../../source/commands/configtxgen.md:18
msgid ""
"Specifies a profile to consider as the orderer system channel current "
"state to allow modification of non-application parameters during channel "
"create tx generation. Only valid in conjunction with "
"'outputCreateChannelTx'."
msgstr ""

#: ../../source/commands/configtxgen.md:19
msgid "-channelID string"
msgstr ""

#: ../../source/commands/configtxgen.md:20
msgid "The channel ID to use in the configtx"
msgstr ""

#: ../../source/commands/configtxgen.md:21
msgid "-configPath string"
msgstr ""

#: ../../source/commands/configtxgen.md:22
msgid "The path containing the configuration to use (if set)"
msgstr ""

#: ../../source/commands/configtxgen.md:23
msgid "-inspectBlock string"
msgstr ""

#: ../../source/commands/configtxgen.md:24
msgid "Prints the configuration contained in the block at the specified path"
msgstr ""

#: ../../source/commands/configtxgen.md:25
msgid "-inspectChannelCreateTx string"
msgstr ""

#: ../../source/commands/configtxgen.md:26
msgid ""
"Prints the configuration contained in the transaction at the specified "
"path"
msgstr ""

#: ../../source/commands/configtxgen.md:27
msgid "-outputAnchorPeersUpdate string"
msgstr ""

#: ../../source/commands/configtxgen.md:28
msgid ""
"[DEPRECATED] Creates a config update to update an anchor peer (works only"
" with the default channel creation, and only for the first update)"
msgstr ""

#: ../../source/commands/configtxgen.md:29
msgid "-outputBlock string"
msgstr ""

#: ../../source/commands/configtxgen.md:30
msgid "The path to write the genesis block to (if set)"
msgstr ""

#: ../../source/commands/configtxgen.md:31
msgid "-outputCreateChannelTx string"
msgstr ""

#: ../../source/commands/configtxgen.md:32
msgid "The path to write a channel creation configtx to (if set)"
msgstr ""

#: ../../source/commands/configtxgen.md:33
msgid "-printOrg string"
msgstr ""

#: ../../source/commands/configtxgen.md:34
msgid ""
"Prints the definition of an organization as JSON. (useful for adding an "
"org to a channel manually)"
msgstr ""

#: ../../source/commands/configtxgen.md:35
msgid "-profile string"
msgstr ""

#: ../../source/commands/configtxgen.md:36
msgid "The profile from configtx.yaml to use for generation."
msgstr ""

#: ../../source/commands/configtxgen.md:38
#: ../../source/commands/configtxlator.md:87
#: ../../source/commands/cryptogen.md:37 ../../source/commands/cryptogen.md:87
msgid "Show version information"
msgstr ""

#: ../../source/commands/configtxgen.md:39
#: ../../source/commands/configtxlator.md:31
#: ../../source/commands/configtxlator.md:47
#: ../../source/commands/configtxlator.md:63
#: ../../source/commands/configtxlator.md:80
#: ../../source/commands/configtxlator.md:91
#: ../../source/commands/cryptogen.md:41 ../../source/commands/cryptogen.md:55
#: ../../source/commands/cryptogen.md:66 ../../source/commands/cryptogen.md:80
#: ../../source/commands/cryptogen.md:91 ../../source/commands/cryptogen.md:100
#: ../../source/commands/cryptogen.md:102
#: ../../source/commands/peerchaincode.md:98
#: ../../source/commands/peerchaincode.md:133
#: ../../source/commands/peerchaincode.md:165
#: ../../source/commands/peerchaincode.md:194
#: ../../source/commands/peerchaincode.md:225
#: ../../source/commands/peerchaincode.md:256
#: ../../source/commands/peerchaincode.md:279
#: ../../source/commands/peerchaincode.md:315
#: ../../source/commands/peerchaincode.md:336
#: ../../source/commands/peerchaincode.md:371
#: ../../source/commands/peerchaincode.md:379
#: ../../source/commands/peerchaincode.md:412
#: ../../source/commands/peerchaincode.md:437
#: ../../source/commands/peerchaincode.md:455
#: ../../source/commands/peerchannel.md:73
#: ../../source/commands/peerchannel.md:97
#: ../../source/commands/peerchannel.md:120
#: ../../source/commands/peerchannel.md:143
#: ../../source/commands/peerchannel.md:165
#: ../../source/commands/peerchannel.md:188
#: ../../source/commands/peerchannel.md:212
#: ../../source/commands/peerchannel.md:232
#: ../../source/commands/peerchannel.md:253
#: ../../source/commands/peerchannel.md:255
#: ../../source/commands/peerchannel.md:285
#: ../../source/commands/peerchannel.md:305
#: ../../source/commands/peerchannel.md:328
#: ../../source/commands/peerchannel.md:349
#: ../../source/commands/peerchannel.md:367
#: ../../source/commands/peerchannel.md:393
#: ../../source/commands/peerchannel.md:414
#: ../../source/commands/peerlifecycle.md:107
#: ../../source/commands/peerlifecycle.md:132
#: ../../source/commands/peerlifecycle.md:158
#: ../../source/commands/peerlifecycle.md:185
#: ../../source/commands/peerlifecycle.md:223
#: ../../source/commands/peerlifecycle.md:252
#: ../../source/commands/peerlifecycle.md:288
#: ../../source/commands/peerlifecycle.md:325
#: ../../source/commands/peerlifecycle.md:353
#: ../../source/commands/peerlifecycle.md:714
#: ../../source/commands/peernode.md:25 ../../source/commands/peernode.md:37
#: ../../source/commands/peernode.md:51 ../../source/commands/peerversion.md:14
#: ../../source/commands/peerversion.md:16
#: ../../source/commands/peerversion.md:31
msgid "```"
msgstr ""

#: ../../source/commands/configtxgen.md:41
#: ../../source/commands/cryptogen.md:93
#: ../../source/commands/peercommand.md:52
msgid "## Usage"
msgstr ""

#: ../../source/commands/configtxgen.md:43
msgid "### Output a genesis block"
msgstr ""

#: ../../source/commands/configtxgen.md:45
msgid ""
"Write a genesis block to `genesis_block.pb` for channel `orderer-system-"
"channel` for profile `SampleSingleMSPRaftV1_1`."
msgstr ""

#: ../../source/commands/configtxgen.md:48
msgid ""
"``` configtxgen -outputBlock genesis_block.pb -profile "
"SampleSingleMSPRaftV1_1 -channelID orderer-system-channel ```"
msgstr ""

#: ../../source/commands/configtxgen.md:52
msgid "### Output a channel creation tx"
msgstr ""

#: ../../source/commands/configtxgen.md:54
msgid ""
"Write a channel creation transaction to `create_chan_tx.pb` for profile "
"`SampleSingleMSPChannelV1_1`."
msgstr ""

#: ../../source/commands/configtxgen.md:57
msgid ""
"``` configtxgen -outputCreateChannelTx create_chan_tx.pb -profile "
"SampleSingleMSPChannelV1_1 -channelID application-channel-1 ```"
msgstr ""

#: ../../source/commands/configtxgen.md:61
msgid "### Inspect a genesis block"
msgstr ""

#: ../../source/commands/configtxgen.md:63
msgid ""
"Print the contents of a genesis block named `genesis_block.pb` to the "
"screen as JSON."
msgstr ""

#: ../../source/commands/configtxgen.md:66
msgid "``` configtxgen -inspectBlock genesis_block.pb ```"
msgstr ""

#: ../../source/commands/configtxgen.md:70
msgid "### Inspect a channel creation tx"
msgstr ""

#: ../../source/commands/configtxgen.md:72
msgid ""
"Print the contents of a channel creation tx named `create_chan_tx.pb` to "
"the screen as JSON."
msgstr ""

#: ../../source/commands/configtxgen.md:75
msgid "``` configtxgen -inspectChannelCreateTx create_chan_tx.pb ```"
msgstr ""

#: ../../source/commands/configtxgen.md:79
msgid "### Print an organization definition"
msgstr ""

#: ../../source/commands/configtxgen.md:81
msgid ""
"Construct an organization definition based on the parameters such as "
"MSPDir from `configtx.yaml` and print it as JSON to the screen. (This "
"output is useful for channel reconfiguration workflows, such as adding a "
"member)."
msgstr ""

#: ../../source/commands/configtxgen.md:85
msgid "``` configtxgen -printOrg Org1 ```"
msgstr ""

#: ../../source/commands/configtxgen.md:89
msgid "### Output anchor peer tx (deprecated)"
msgstr ""

#: ../../source/commands/configtxgen.md:91
msgid ""
"Output a channel configuration update transaction `anchor_peer_tx.pb`  "
"based on the anchor peers defined for Org1 and channel profile "
"SampleSingleMSPChannelV1_1 in `configtx.yaml`. Transaction will set "
"anchor peers for Org1 if no anchor peers have been set on the channel. "
"``` configtxgen -outputAnchorPeersUpdate anchor_peer_tx.pb -profile "
"SampleSingleMSPChannelV1_1 -asOrg Org1 ```"
msgstr ""

#: ../../source/commands/configtxgen.md:99
msgid ""
"The `-outputAnchorPeersUpdate` output flag has been deprecated. To set "
"anchor peers on the channel, use [configtxlator](configtxlator.html) to "
"update the channel configuration."
msgstr ""

#: ../../source/commands/configtxgen.md:103
msgid "## Configuration"
msgstr ""

#: ../../source/commands/configtxgen.md:105
msgid ""
"The `configtxgen` tool's output is largely controlled by the content of "
"`configtx.yaml`.  This file is searched for at `FABRIC_CFG_PATH` and must"
" be present for `configtxgen` to operate."
msgstr ""

#: ../../source/commands/configtxgen.md:109
msgid ""
"Refer to the sample `configtx.yaml` shipped with Fabric for all possible "
"configuration options.  You may find this file in the `config` directory "
"of the release artifacts tar, or you may find it under the `sampleconfig`"
" folder if you are building from source."
msgstr ""

#: ../../source/commands/configtxgen.md:115
#: ../../source/commands/configtxlator.md:157
#: ../../source/commands/cryptogen.md:106
#: ../../source/commands/peerchaincode.md:524
#: ../../source/commands/peerchannel.md:418
#: ../../source/commands/peerlifecycle.md:753
#: ../../source/commands/peernode.md:84 ../../source/commands/peerversion.md:34
msgid ""
"<a rel=\"license\" "
"href=\"http://creativecommons.org/licenses/by/4.0/\"><img alt=\"Creative "
"Commons License\" style=\"border-width:0\" "
"src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" /></a><br />This"
" work is licensed under a <a rel=\"license\" "
"href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons "
"Attribution 4.0 International License</a>."
msgstr ""

#: ../../source/commands/configtxlator.md:1
msgid "# configtxlator"
msgstr ""

#: ../../source/commands/configtxlator.md:3
msgid ""
"The `configtxlator` command allows users to translate between protobuf "
"and JSON versions of fabric data structures and create config updates.  "
"The command may either start a REST server to expose its functions over "
"HTTP or may be utilized directly as a command line tool."
msgstr ""

#: ../../source/commands/configtxlator.md:10
msgid "The `configtxlator` tool has five sub-commands, as follows:"
msgstr ""

#: ../../source/commands/configtxlator.md:12
#: ../../source/commands/peernode.md:11
msgid "start"
msgstr ""

#: ../../source/commands/configtxlator.md:13
msgid "proto_encode"
msgstr ""

#: ../../source/commands/configtxlator.md:14
msgid "proto_decode"
msgstr ""

#: ../../source/commands/configtxlator.md:15
msgid "compute_update"
msgstr ""

#: ../../source/commands/configtxlator.md:16
#: ../../source/commands/cryptogen.md:15 ../../source/commands/cryptogen.md:37
msgid "version"
msgstr ""

#: ../../source/commands/configtxlator.md:18
msgid "## configtxlator start ``` usage: configtxlator start [<flags>]"
msgstr ""

#: ../../source/commands/configtxlator.md:22
msgid "Start the configtxlator REST server"
msgstr ""

#: ../../source/commands/configtxlator.md:29
#: ../../source/commands/configtxlator.md:45
#: ../../source/commands/configtxlator.md:61
#: ../../source/commands/configtxlator.md:78
#: ../../source/commands/configtxlator.md:89
#: ../../source/commands/cryptogen.md:24 ../../source/commands/cryptogen.md:53
#: ../../source/commands/cryptogen.md:64 ../../source/commands/cryptogen.md:78
#: ../../source/commands/cryptogen.md:89
#: ../../source/commands/peerchaincode.md:86
#: ../../source/commands/peerchaincode.md:121
#: ../../source/commands/peerchaincode.md:153
#: ../../source/commands/peerchaincode.md:182
#: ../../source/commands/peerchaincode.md:213
#: ../../source/commands/peerchaincode.md:244
#: ../../source/commands/peerchaincode.md:267
#: ../../source/commands/peerchaincode.md:303
#: ../../source/commands/peerchannel.md:44
#: ../../source/commands/peerchannel.md:62
#: ../../source/commands/peerchannel.md:86
#: ../../source/commands/peerchannel.md:109
#: ../../source/commands/peerchannel.md:132
#: ../../source/commands/peerchannel.md:154
#: ../../source/commands/peerchannel.md:177
#: ../../source/commands/peerchannel.md:201
#: ../../source/commands/peercommand.md:68
#: ../../source/commands/peerlifecycle.md:43
#: ../../source/commands/peerlifecycle.md:76
#: ../../source/commands/peerlifecycle.md:96
#: ../../source/commands/peerlifecycle.md:121
#: ../../source/commands/peerlifecycle.md:147
#: ../../source/commands/peerlifecycle.md:174
#: ../../source/commands/peerlifecycle.md:212
#: ../../source/commands/peerlifecycle.md:241
#: ../../source/commands/peerlifecycle.md:277
#: ../../source/commands/peerlifecycle.md:314
#: ../../source/commands/peerlifecycle.md:342
#: ../../source/commands/peernode.md:23 ../../source/commands/peernode.md:35
#: ../../source/commands/peernode.md:49 ../../source/commands/peerversion.md:29
msgid "Flags:"
msgstr ""

#: ../../source/commands/configtxlator.md:25
#: ../../source/commands/configtxlator.md:41
#: ../../source/commands/configtxlator.md:57
#: ../../source/commands/configtxlator.md:74
#: ../../source/commands/configtxlator.md:90
#: ../../source/commands/cryptogen.md:24 ../../source/commands/cryptogen.md:51
#: ../../source/commands/cryptogen.md:65 ../../source/commands/cryptogen.md:76
#: ../../source/commands/cryptogen.md:90
msgid "Show context-sensitive help (also try --help-long and --help-man)."
msgstr ""

#: ../../source/commands/configtxlator.md:27
msgid ""
"--hostname=\"0.0.0.0\"  The hostname or IP on which the REST server will "
"listen --port=7059           The port on which the REST server will "
"listen --CORS=CORS ...       Allowable CORS domains, e.g. '*' or "
"'www.example.com'"
msgstr ""

#: ../../source/commands/configtxlator.md:30
msgid "(may be repeated)."
msgstr ""

#: ../../source/commands/configtxlator.md:34
msgid ""
"## configtxlator proto_encode ``` usage: configtxlator proto_encode "
"--type=TYPE [<flags>]"
msgstr ""

#: ../../source/commands/configtxlator.md:38
msgid "Converts a JSON document to protobuf."
msgstr ""

#: ../../source/commands/configtxlator.md:43
msgid "The type of protobuf structure to encode to. For example, 'common.Config'."
msgstr ""

#: ../../source/commands/configtxlator.md:45
msgid ""
"--input=/dev/stdin    A file containing the JSON document. "
"--output=/dev/stdout  A file to write the output to."
msgstr ""

#: ../../source/commands/configtxlator.md:50
msgid ""
"## configtxlator proto_decode ``` usage: configtxlator proto_decode "
"--type=TYPE [<flags>]"
msgstr ""

#: ../../source/commands/configtxlator.md:54
msgid "Converts a proto message to JSON."
msgstr ""

#: ../../source/commands/configtxlator.md:59
msgid ""
"The type of protobuf structure to decode from. For example, "
"'common.Config'."
msgstr ""

#: ../../source/commands/configtxlator.md:61
msgid ""
"--input=/dev/stdin    A file containing the proto message. "
"--output=/dev/stdout  A file to write the JSON document to."
msgstr ""

#: ../../source/commands/configtxlator.md:66
msgid ""
"## configtxlator compute_update ``` usage: configtxlator compute_update "
"--channel_id=CHANNEL_ID [<flags>]"
msgstr ""

#: ../../source/commands/configtxlator.md:70
msgid ""
"Takes two marshaled common.Config messages and computes the config update"
" which transitions between the two."
msgstr ""

#: ../../source/commands/configtxlator.md:76
msgid "The original config message."
msgstr ""

#: ../../source/commands/configtxlator.md:77
msgid "The updated config message."
msgstr ""

#: ../../source/commands/configtxlator.md:78
msgid "The name of the channel for this update."
msgstr ""

#: ../../source/commands/configtxlator.md:79
msgid "--output=/dev/stdout     A file to write the JSON document to."
msgstr ""

#: ../../source/commands/configtxlator.md:83
msgid "## configtxlator version ``` usage: configtxlator version"
msgstr ""

#: ../../source/commands/configtxlator.md:93
msgid "## Examples"
msgstr ""

#: ../../source/commands/configtxlator.md:95
msgid "### Decoding"
msgstr ""

#: ../../source/commands/configtxlator.md:97
msgid "Decode a block named `fabric_block.pb` to JSON and print to stdout."
msgstr ""

#: ../../source/commands/configtxlator.md:99
msgid ""
"``` configtxlator proto_decode --input fabric_block.pb --type "
"common.Block ```"
msgstr ""

#: ../../source/commands/configtxlator.md:103
#: ../../source/commands/configtxlator.md:118
msgid ""
"Alternatively, after starting the REST server, the following curl command"
" performs the same operation through the REST API."
msgstr ""

#: ../../source/commands/configtxlator.md:106
msgid ""
"``` curl -X POST --data-binary @fabric_block.pb "
"\"${CONFIGTXLATOR_URL}/protolator/decode/common.Block\" ```"
msgstr ""

#: ../../source/commands/configtxlator.md:110
msgid "### Encoding"
msgstr ""

#: ../../source/commands/configtxlator.md:112
msgid ""
"Convert a JSON document for a policy from stdin to a file named "
"`policy.pb`."
msgstr ""

#: ../../source/commands/configtxlator.md:114
msgid "``` configtxlator proto_encode --type common.Policy --output policy.pb ```"
msgstr ""

#: ../../source/commands/configtxlator.md:121
msgid ""
"``` curl -X POST --data-binary /dev/stdin "
"\"${CONFIGTXLATOR_URL}/protolator/encode/common.Policy\" > policy.pb ```"
msgstr ""

#: ../../source/commands/configtxlator.md:125
msgid "### Pipelines"
msgstr ""

#: ../../source/commands/configtxlator.md:127
msgid ""
"Compute a config update from `original_config.pb` and "
"`modified_config.pb` and decode it to JSON to stdout."
msgstr ""

#: ../../source/commands/configtxlator.md:129
msgid ""
"``` configtxlator compute_update --channel_id testchan --original "
"original_config.pb --updated modified_config.pb | configtxlator "
"proto_decode --type common.ConfigUpdate ```"
msgstr ""

#: ../../source/commands/configtxlator.md:133
msgid ""
"Alternatively, after starting the REST server, the following curl "
"commands perform the same operations through the REST API."
msgstr ""

#: ../../source/commands/configtxlator.md:136
msgid ""
"``` curl -X POST -F channel=testchan -F \"original=@original_config.pb\" "
"-F \"updated=@modified_config.pb\" "
"\"${CONFIGTXLATOR_URL}/configtxlator/compute/update-from-configs\" | curl"
" -X POST --data-binary /dev/stdin "
"\"${CONFIGTXLATOR_URL}/protolator/decode/common.ConfigUpdate\" ```"
msgstr ""

#: ../../source/commands/configtxlator.md:140
msgid "## Additional Notes"
msgstr ""

#: ../../source/commands/configtxlator.md:142
msgid ""
"The tool name is a portmanteau of *configtx* and *translator* and is "
"intended to convey that the tool simply converts between different "
"equivalent data representations. It does not generate configuration. It "
"does not submit or retrieve configuration. It does not modify "
"configuration itself, it simply provides some bijective operations "
"between different views of the configtx format."
msgstr ""

#: ../../source/commands/configtxlator.md:149
msgid ""
"There is no configuration file `configtxlator` nor any authentication or "
"authorization facilities included for the REST server.  Because "
"`configtxlator` does not have any access to data, key material, or other "
"information which might be considered sensitive, there is no risk to the "
"owner of the server in exposing it to other clients.  However, because "
"the data sent by a user to the REST server might be confidential, the "
"user should either trust the administrator of the server, run a local "
"instance, or operate via the CLI."
msgstr ""

#: ../../source/commands/cryptogen.md:1
msgid "# cryptogen"
msgstr ""

#: ../../source/commands/cryptogen.md:3
msgid ""
"`cryptogen` is an utility for generating Hyperledger Fabric key material."
" It is provided as a means of preconfiguring a network for testing "
"purposes. It would normally not be used in the operation of a production "
"network."
msgstr ""

#: ../../source/commands/cryptogen.md:9
msgid "The ``cryptogen`` command has five subcommands, as follows:"
msgstr ""

#: ../../source/commands/cryptogen.md:11
msgid "help"
msgstr ""

#: ../../source/commands/cryptogen.md:12
msgid "generate"
msgstr ""

#: ../../source/commands/cryptogen.md:13 ../../source/commands/cryptogen.md:34
msgid "showtemplate"
msgstr ""

#: ../../source/commands/cryptogen.md:14
msgid "extend"
msgstr ""

#: ../../source/commands/cryptogen.md:17
msgid "## cryptogen help ``` usage: cryptogen [<flags>] <command> [<args> ...]"
msgstr ""

#: ../../source/commands/cryptogen.md:21
msgid "Utility for generating Hyperledger Fabric key material"
msgstr ""

#: ../../source/commands/cryptogen.md:39
msgid "Commands:"
msgstr ""

#: ../../source/commands/cryptogen.md:28
msgid "help [<command>...]"
msgstr ""

#: ../../source/commands/cryptogen.md:28
msgid "Show help."
msgstr ""

#: ../../source/commands/cryptogen.md:31
msgid "generate [<flags>]"
msgstr ""

#: ../../source/commands/cryptogen.md:31 ../../source/commands/cryptogen.md:48
msgid "Generate key material"
msgstr ""

#: ../../source/commands/cryptogen.md:34 ../../source/commands/cryptogen.md:62
msgid "Show the default configuration template"
msgstr ""

#: ../../source/commands/cryptogen.md:39
msgid "extend [<flags>]"
msgstr ""

#: ../../source/commands/cryptogen.md:40 ../../source/commands/cryptogen.md:73
msgid "Extend existing network"
msgstr ""

#: ../../source/commands/cryptogen.md:44
msgid "## cryptogen generate ``` usage: cryptogen generate [<flags>]"
msgstr ""

#: ../../source/commands/cryptogen.md:53
msgid ""
"--output=\"crypto-config\"  The output directory in which to place "
"artifacts --config=CONFIG           The configuration template to use"
msgstr ""

#: ../../source/commands/cryptogen.md:58
msgid "## cryptogen showtemplate ``` usage: cryptogen showtemplate"
msgstr ""

#: ../../source/commands/cryptogen.md:69
msgid "## cryptogen extend ``` usage: cryptogen extend [<flags>]"
msgstr ""

#: ../../source/commands/cryptogen.md:78
msgid ""
"--input=\"crypto-config\"  The input directory in which existing network "
"place --config=CONFIG          The configuration template to use"
msgstr ""

#: ../../source/commands/cryptogen.md:83
msgid "## cryptogen version ``` usage: cryptogen version"
msgstr ""

#: ../../source/commands/cryptogen.md:95
msgid ""
"Here's an example using the different available flags on the ``cryptogen "
"extend`` command."
msgstr ""

#: ../../source/commands/cryptogen.md:99
msgid "cryptogen extend --input=\"crypto-config\" --config=config.yaml"
msgstr ""

#: ../../source/commands/cryptogen.md:101
msgid "org3.example.com"
msgstr ""

#: ../../source/commands/cryptogen.md:104
msgid "Where config.yaml adds a new peer organization called ``org3.example.com``"
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:2
msgid "Fabric-CA Commands"
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:4
msgid ""
"The Hyperledger Fabric CA is a Certificate Authority (CA) for Hyperledger"
" Fabric. The commands available for the fabric-ca client and fabric-ca "
"server are described in the links below."
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:9
msgid "Fabric-CA Client"
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:11
msgid ""
"The fabric-ca-client command allows you to manage identities (including "
"attribute management) and certificates (including renewal and "
"revocation)."
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:14
msgid ""
"More information on ``fabric-ca-client`` commands can be found `here "
"<https://hyperledger-fabric-"
"ca.readthedocs.io/en/release-1.4/clientcli.html#fabric-ca-"
"client-s-cli>`__."
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:17
msgid "Fabric-CA Server"
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:19
msgid ""
"The fabric-ca-server command allows you to initialize and start a server "
"process which may host one or more certificate authorities."
msgstr ""

#: ../../source/commands/fabric-ca-commands.rst:22
msgid ""
"More information on ``fabric-ca-server`` commands can be found `here "
"<https://hyperledger-fabric-"
"ca.readthedocs.io/en/release-1.4/servercli.html#fabric-ca-"
"server-s-cli>`__."
msgstr ""

#: ../../source/commands/peerchaincode.md:1
msgid "# peer chaincode"
msgstr ""

#: ../../source/commands/peerchaincode.md:3
msgid ""
"The `peer chaincode` command allows administrators to perform chaincode "
"related operations on a peer, such as installing, instantiating, "
"invoking, packaging, querying, and upgrading chaincode."
msgstr ""

#: ../../source/commands/peerchaincode.md:9
msgid "The `peer chaincode` command has the following subcommands:"
msgstr ""

#: ../../source/commands/peerchaincode.md:11
#: ../../source/commands/peerlifecycle.md:20
msgid "install"
msgstr ""

#: ../../source/commands/peerchaincode.md:12
msgid "instantiate"
msgstr ""

#: ../../source/commands/peerchaincode.md:13
msgid "invoke"
msgstr ""

#: ../../source/commands/peerchaincode.md:14
#: ../../source/commands/peerchannel.md:15
msgid "list"
msgstr ""

#: ../../source/commands/peerchaincode.md:15
#: ../../source/commands/peerlifecycle.md:19
msgid "package"
msgstr ""

#: ../../source/commands/peerchaincode.md:16
msgid "query"
msgstr ""

#: ../../source/commands/peerchaincode.md:17
msgid "signpackage"
msgstr ""

#: ../../source/commands/peerchaincode.md:18
msgid "upgrade"
msgstr ""

#: ../../source/commands/peerchaincode.md:20
msgid ""
"The different subcommand options (install, instantiate...) relate to the "
"different chaincode operations that are relevant to a peer. For example, "
"use the `peer chaincode install` subcommand option to install a chaincode"
" on a peer, or the `peer chaincode query` subcommand option to query a "
"chaincode for the current value on a peer's ledger."
msgstr ""

#: ../../source/commands/peerchaincode.md:26
msgid ""
"Each peer chaincode subcommand is described together with its options in "
"its own section in this topic."
msgstr ""

#: ../../source/commands/peerchaincode.md:29
#: ../../source/commands/peercommand.md:29
msgid "## Flags"
msgstr ""

#: ../../source/commands/peerchaincode.md:31
msgid ""
"Each `peer chaincode` subcommand has both a set of flags specific to an "
"individual subcommand, as well as a set of global flags that relate to "
"all `peer chaincode` subcommands. Not all subcommands would use these "
"flags. For instance, the `query` subcommand does not need the `--orderer`"
" flag."
msgstr ""

#: ../../source/commands/peerchaincode.md:36
msgid ""
"The individual flags are described with the relevant subcommand. The "
"global flags are"
msgstr ""

#: ../../source/commands/peerchaincode.md:39
msgid "`--cafile <string>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:41
#: ../../source/commands/peerchaincode.md:89
#: ../../source/commands/peerchaincode.md:124
#: ../../source/commands/peerchaincode.md:156
#: ../../source/commands/peerchaincode.md:185
#: ../../source/commands/peerchaincode.md:216
#: ../../source/commands/peerchaincode.md:247
#: ../../source/commands/peerchaincode.md:270
#: ../../source/commands/peerchaincode.md:306
#: ../../source/commands/peerchannel.md:36
#: ../../source/commands/peerchannel.md:65
#: ../../source/commands/peerchannel.md:89
#: ../../source/commands/peerchannel.md:112
#: ../../source/commands/peerchannel.md:135
#: ../../source/commands/peerchannel.md:157
#: ../../source/commands/peerchannel.md:180
#: ../../source/commands/peerchannel.md:204
#: ../../source/commands/peercommand.md:71
#: ../../source/commands/peerlifecycle.md:68
#: ../../source/commands/peerlifecycle.md:99
#: ../../source/commands/peerlifecycle.md:124
#: ../../source/commands/peerlifecycle.md:150
#: ../../source/commands/peerlifecycle.md:177
#: ../../source/commands/peerlifecycle.md:215
#: ../../source/commands/peerlifecycle.md:244
#: ../../source/commands/peerlifecycle.md:280
#: ../../source/commands/peerlifecycle.md:317
#: ../../source/commands/peerlifecycle.md:345
msgid ""
"Path to file containing PEM-encoded trusted certificate(s) for the "
"ordering endpoint"
msgstr ""

#: ../../source/commands/peerchaincode.md:44
msgid "`--certfile <string>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:46
#: ../../source/commands/peerchaincode.md:90
#: ../../source/commands/peerchaincode.md:125
#: ../../source/commands/peerchaincode.md:157
#: ../../source/commands/peerchaincode.md:186
#: ../../source/commands/peerchaincode.md:217
#: ../../source/commands/peerchaincode.md:248
#: ../../source/commands/peerchaincode.md:271
#: ../../source/commands/peerchaincode.md:307
#: ../../source/commands/peerchannel.md:37
#: ../../source/commands/peerchannel.md:66
#: ../../source/commands/peerchannel.md:90
#: ../../source/commands/peerchannel.md:113
#: ../../source/commands/peerchannel.md:136
#: ../../source/commands/peerchannel.md:158
#: ../../source/commands/peerchannel.md:181
#: ../../source/commands/peerchannel.md:205
#: ../../source/commands/peercommand.md:72
#: ../../source/commands/peerlifecycle.md:69
#: ../../source/commands/peerlifecycle.md:100
#: ../../source/commands/peerlifecycle.md:125
#: ../../source/commands/peerlifecycle.md:151
#: ../../source/commands/peerlifecycle.md:178
#: ../../source/commands/peerlifecycle.md:216
#: ../../source/commands/peerlifecycle.md:245
#: ../../source/commands/peerlifecycle.md:281
#: ../../source/commands/peerlifecycle.md:318
#: ../../source/commands/peerlifecycle.md:346
msgid ""
"Path to file containing PEM-encoded X509 public key to use for mutual TLS"
" communication with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerchaincode.md:49
msgid "`--keyfile <string>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:51
#: ../../source/commands/peerchaincode.md:93
#: ../../source/commands/peerchaincode.md:128
#: ../../source/commands/peerchaincode.md:160
#: ../../source/commands/peerchaincode.md:189
#: ../../source/commands/peerchaincode.md:220
#: ../../source/commands/peerchaincode.md:251
#: ../../source/commands/peerchaincode.md:274
#: ../../source/commands/peerchaincode.md:310
#: ../../source/commands/peerchannel.md:69
#: ../../source/commands/peerchannel.md:93
#: ../../source/commands/peerchannel.md:116
#: ../../source/commands/peerchannel.md:139
#: ../../source/commands/peerchannel.md:161
#: ../../source/commands/peerchannel.md:184
#: ../../source/commands/peerchannel.md:208
#: ../../source/commands/peercommand.md:75
#: ../../source/commands/peerlifecycle.md:103
#: ../../source/commands/peerlifecycle.md:128
#: ../../source/commands/peerlifecycle.md:154
#: ../../source/commands/peerlifecycle.md:181
#: ../../source/commands/peerlifecycle.md:219
#: ../../source/commands/peerlifecycle.md:248
#: ../../source/commands/peerlifecycle.md:284
#: ../../source/commands/peerlifecycle.md:321
#: ../../source/commands/peerlifecycle.md:349
msgid ""
"Path to file containing PEM-encoded private key to use for mutual TLS "
"communication with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerchaincode.md:54
msgid "`-o` or `--orderer <string>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:56
msgid "Ordering service endpoint specified as `<hostname or IP address>:<port>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:58
msgid "`--ordererTLSHostnameOverride <string>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:60
msgid ""
"The hostname override to use when validating the TLS connection to the "
"orderer"
msgstr ""

#: ../../source/commands/peerchaincode.md:62
msgid "`--tls`"
msgstr ""

#: ../../source/commands/peerchaincode.md:64
msgid "Use TLS when communicating with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerchaincode.md:66
msgid "`--transient <string>`"
msgstr ""

#: ../../source/commands/peerchaincode.md:68
msgid "Transient map of arguments in JSON encoding"
msgstr ""

#: ../../source/commands/peerchaincode.md:70
msgid ""
"## peer chaincode install ``` Install a chaincode on a peer. This "
"installs a chaincode deployment spec package (if provided) or packages "
"the specified chaincode before subsequently installing it."
msgstr ""

#: ../../source/commands/peerchaincode.md:75
#: ../../source/commands/peerchaincode.md:106
#: ../../source/commands/peerchaincode.md:141
#: ../../source/commands/peerchaincode.md:173
#: ../../source/commands/peerchaincode.md:202
#: ../../source/commands/peerchaincode.md:233
#: ../../source/commands/peerchaincode.md:264
#: ../../source/commands/peerchaincode.md:287
#: ../../source/commands/peerchannel.md:24
#: ../../source/commands/peerchannel.md:55
#: ../../source/commands/peerchannel.md:81
#: ../../source/commands/peerchannel.md:105
#: ../../source/commands/peerchannel.md:128
#: ../../source/commands/peerchannel.md:151
#: ../../source/commands/peerchannel.md:173
#: ../../source/commands/peerchannel.md:196
#: ../../source/commands/peercommand.md:64
#: ../../source/commands/peerlifecycle.md:37
#: ../../source/commands/peerlifecycle.md:54
#: ../../source/commands/peerlifecycle.md:87
#: ../../source/commands/peerlifecycle.md:115
#: ../../source/commands/peerlifecycle.md:140
#: ../../source/commands/peerlifecycle.md:166
#: ../../source/commands/peerlifecycle.md:193
#: ../../source/commands/peerlifecycle.md:231
#: ../../source/commands/peerlifecycle.md:260
#: ../../source/commands/peerlifecycle.md:296
#: ../../source/commands/peerlifecycle.md:333
#: ../../source/commands/peernode.md:20 ../../source/commands/peernode.md:33
#: ../../source/commands/peernode.md:45 ../../source/commands/peerversion.md:27
msgid "Usage:"
msgstr ""

#: ../../source/commands/peerchaincode.md:75
msgid "peer chaincode install [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:78
msgid ""
"Connection profile that provides the necessary connection information for"
" the network. Note: currently only supported for providing peer "
"connection information"
msgstr ""

#: ../../source/commands/peerchaincode.md:79
#: ../../source/commands/peerchaincode.md:112
#: ../../source/commands/peerchaincode.md:146
#: ../../source/commands/peerchaincode.md:206
#: ../../source/commands/peerchaincode.md:238
#: ../../source/commands/peerchaincode.md:293
msgid "Constructor message for the chaincode in JSON format (default \"{}\")"
msgstr ""

#: ../../source/commands/peerchaincode.md:80
msgid "help for install"
msgstr ""

#: ../../source/commands/peerchaincode.md:81
#: ../../source/commands/peerchaincode.md:115
#: ../../source/commands/peerchaincode.md:209
#: ../../source/commands/peerchaincode.md:296
#: ../../source/commands/peerlifecycle.md:93
msgid "Language the chaincode is written in (default \"golang\")"
msgstr ""

#: ../../source/commands/peerchaincode.md:82
#: ../../source/commands/peerchaincode.md:210
#: ../../source/commands/peerchaincode.md:297
#: ../../source/commands/peerlifecycle.md:237
#: ../../source/commands/peerlifecycle.md:270
#: ../../source/commands/peerlifecycle.md:339
msgid "Name of the chaincode"
msgstr ""

#: ../../source/commands/peerchaincode.md:83
msgid ""
"Path to chaincode --peerAddresses stringArray      The addresses of the "
"peers to connect to --tlsRootCertFiles stringArray   If TLS is enabled, "
"the paths to the TLS root cert files of the peers to connect to. The "
"order and number of certs specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerchaincode.md:86
#: ../../source/commands/peerchaincode.md:120
#: ../../source/commands/peerchaincode.md:213
#: ../../source/commands/peerchaincode.md:302
msgid "Version of the chaincode specified in install/instantiate/upgrade commands"
msgstr ""

#: ../../source/commands/peerchaincode.md:96
#: ../../source/commands/peerchaincode.md:131
#: ../../source/commands/peerchaincode.md:163
#: ../../source/commands/peerchaincode.md:192
#: ../../source/commands/peerchaincode.md:223
#: ../../source/commands/peerchaincode.md:254
#: ../../source/commands/peerchaincode.md:277
#: ../../source/commands/peerchaincode.md:313
#: ../../source/commands/peerchannel.md:71
#: ../../source/commands/peerchannel.md:95
#: ../../source/commands/peerchannel.md:118
#: ../../source/commands/peerchannel.md:141
#: ../../source/commands/peerchannel.md:163
#: ../../source/commands/peerchannel.md:186
#: ../../source/commands/peerchannel.md:210
#: ../../source/commands/peercommand.md:78
#: ../../source/commands/peerlifecycle.md:105
#: ../../source/commands/peerlifecycle.md:130
#: ../../source/commands/peerlifecycle.md:156
#: ../../source/commands/peerlifecycle.md:183
#: ../../source/commands/peerlifecycle.md:221
#: ../../source/commands/peerlifecycle.md:250
#: ../../source/commands/peerlifecycle.md:286
#: ../../source/commands/peerlifecycle.md:323
#: ../../source/commands/peerlifecycle.md:351
msgid "Global Flags:"
msgstr ""

#: ../../source/commands/peerchaincode.md:91
#: ../../source/commands/peerchaincode.md:126
#: ../../source/commands/peerchaincode.md:158
#: ../../source/commands/peerchaincode.md:187
#: ../../source/commands/peerchaincode.md:218
#: ../../source/commands/peerchaincode.md:249
#: ../../source/commands/peerchaincode.md:272
#: ../../source/commands/peerchaincode.md:308
#: ../../source/commands/peerchannel.md:38
#: ../../source/commands/peerchannel.md:67
#: ../../source/commands/peerchannel.md:91
#: ../../source/commands/peerchannel.md:114
#: ../../source/commands/peerchannel.md:137
#: ../../source/commands/peerchannel.md:159
#: ../../source/commands/peerchannel.md:182
#: ../../source/commands/peerchannel.md:206
#: ../../source/commands/peercommand.md:73
#: ../../source/commands/peerlifecycle.md:70
#: ../../source/commands/peerlifecycle.md:101
#: ../../source/commands/peerlifecycle.md:126
#: ../../source/commands/peerlifecycle.md:152
#: ../../source/commands/peerlifecycle.md:179
#: ../../source/commands/peerlifecycle.md:217
#: ../../source/commands/peerlifecycle.md:246
#: ../../source/commands/peerlifecycle.md:282
#: ../../source/commands/peerlifecycle.md:319
#: ../../source/commands/peerlifecycle.md:347
msgid "Use mutual TLS when communicating with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerchaincode.md:92
#: ../../source/commands/peerchaincode.md:127
#: ../../source/commands/peerchaincode.md:159
#: ../../source/commands/peerchaincode.md:188
#: ../../source/commands/peerchaincode.md:219
#: ../../source/commands/peerchaincode.md:250
#: ../../source/commands/peerchaincode.md:273
#: ../../source/commands/peerchaincode.md:309
#: ../../source/commands/peerchannel.md:39
#: ../../source/commands/peerchannel.md:68
#: ../../source/commands/peerchannel.md:92
#: ../../source/commands/peerchannel.md:115
#: ../../source/commands/peerchannel.md:138
#: ../../source/commands/peerchannel.md:160
#: ../../source/commands/peerchannel.md:183
#: ../../source/commands/peerchannel.md:207
#: ../../source/commands/peercommand.md:74
#: ../../source/commands/peerlifecycle.md:71
#: ../../source/commands/peerlifecycle.md:102
#: ../../source/commands/peerlifecycle.md:127
#: ../../source/commands/peerlifecycle.md:153
#: ../../source/commands/peerlifecycle.md:180
#: ../../source/commands/peerlifecycle.md:218
#: ../../source/commands/peerlifecycle.md:247
#: ../../source/commands/peerlifecycle.md:283
#: ../../source/commands/peerlifecycle.md:320
#: ../../source/commands/peerlifecycle.md:348
msgid "Timeout for client to connect (default 3s)"
msgstr ""

#: ../../source/commands/peerchaincode.md:94
#: ../../source/commands/peerchaincode.md:129
#: ../../source/commands/peerchaincode.md:161
#: ../../source/commands/peerchaincode.md:190
#: ../../source/commands/peerchaincode.md:221
#: ../../source/commands/peerchaincode.md:252
#: ../../source/commands/peerchaincode.md:275
#: ../../source/commands/peerchaincode.md:311
msgid ""
"Ordering service endpoint --ordererTLSHostnameOverride string   The "
"hostname override to use when validating the TLS connection to the "
"orderer. --tls                                 Use TLS when communicating"
" with the orderer endpoint --transient string                    "
"Transient map of arguments in JSON encoding"
msgstr ""

#: ../../source/commands/peerchaincode.md:101
msgid ""
"## peer chaincode instantiate ``` Deploy the specified chaincode to the "
"network."
msgstr ""

#: ../../source/commands/peerchaincode.md:106
msgid "peer chaincode instantiate [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:109
#: ../../source/commands/peerchaincode.md:290
msgid ""
"The channel on which this command should be executed --collections-config"
" string      The fully qualified path to the collection JSON file "
"including the file name --connectionProfile string       Connection "
"profile that provides the necessary connection information for the "
"network. Note: currently only supported for providing peer connection "
"information"
msgstr ""

#: ../../source/commands/peerchaincode.md:113
#: ../../source/commands/peerchaincode.md:294
msgid "The name of the endorsement system chaincode to be used for this chaincode"
msgstr ""

#: ../../source/commands/peerchaincode.md:114
msgid "help for instantiate"
msgstr ""

#: ../../source/commands/peerchaincode.md:116
#: ../../source/commands/peerchaincode.md:241
msgid ""
"Name of the chaincode --peerAddresses stringArray      The addresses of "
"the peers to connect to"
msgstr ""

#: ../../source/commands/peerchaincode.md:118
#: ../../source/commands/peerchaincode.md:300
msgid ""
"The endorsement policy associated to this chaincode --tlsRootCertFiles "
"stringArray   If TLS is enabled, the paths to the TLS root cert files of "
"the peers to connect to. The order and number of certs specified should "
"match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerchaincode.md:121
#: ../../source/commands/peerchaincode.md:303
msgid ""
"The name of the verification system chaincode to be used for this "
"chaincode"
msgstr ""

#: ../../source/commands/peerchaincode.md:136
msgid ""
"## peer chaincode invoke ``` Invoke the specified chaincode. It will try "
"to commit the endorsed transaction to the network."
msgstr ""

#: ../../source/commands/peerchaincode.md:141
msgid "peer chaincode invoke [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:144
#: ../../source/commands/peerchaincode.md:176
#: ../../source/commands/peerchaincode.md:236
msgid ""
"The channel on which this command should be executed --connectionProfile "
"string       Connection profile that provides the necessary connection "
"information for the network. Note: currently only supported for providing"
" peer connection information"
msgstr ""

#: ../../source/commands/peerchaincode.md:147
msgid "help for invoke"
msgstr ""

#: ../../source/commands/peerchaincode.md:148
msgid ""
"Is this invocation for init (useful for supporting legacy chaincodes in "
"the new lifecycle)"
msgstr ""

#: ../../source/commands/peerchaincode.md:149
msgid ""
"Name of the chaincode --peerAddresses stringArray      The addresses of "
"the peers to connect to --tlsRootCertFiles stringArray   If TLS is "
"enabled, the paths to the TLS root cert files of the peers to connect to."
" The order and number of certs specified should match the --peerAddresses"
" flag --waitForEvent                   Whether to wait for the event from"
" each peer's deliver filtered service signifying that the 'invoke' "
"transaction has been committed successfully --waitForEventTimeout "
"duration   Time to wait for the event from each peer's deliver filtered "
"service signifying that the 'invoke' transaction has been committed "
"successfully (default 30s)"
msgstr ""

#: ../../source/commands/peerchaincode.md:168
msgid ""
"## peer chaincode list ``` Get the instantiated chaincodes in the channel"
" if specify channel, or get installed chaincodes on the peer"
msgstr ""

#: ../../source/commands/peerchaincode.md:173
msgid "peer chaincode list [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:178
msgid ""
"help for list --installed                      Get the installed "
"chaincodes on a peer --instantiated                   Get the "
"instantiated chaincodes on a channel --peerAddresses stringArray      The"
" addresses of the peers to connect to --tlsRootCertFiles stringArray   If"
" TLS is enabled, the paths to the TLS root cert files of the peers to "
"connect to. The order and number of certs specified should match the "
"--peerAddresses flag"
msgstr ""

#: ../../source/commands/peerchaincode.md:197
msgid ""
"## peer chaincode package ``` Package a chaincode and write the package "
"to a file."
msgstr ""

#: ../../source/commands/peerchaincode.md:202
msgid "peer chaincode package [outputfile] [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:205
msgid ""
"create CC deployment spec for owner endorsements instead of raw CC "
"deployment spec"
msgstr ""

#: ../../source/commands/peerchaincode.md:207
msgid "help for package"
msgstr ""

#: ../../source/commands/peerchaincode.md:208
msgid "instantiation policy for the chaincode"
msgstr ""

#: ../../source/commands/peerchaincode.md:211
msgid "Path to chaincode"
msgstr ""

#: ../../source/commands/peerchaincode.md:212
msgid ""
"if creating CC deployment spec package for owner endorsements, also sign "
"it with local MSP"
msgstr ""

#: ../../source/commands/peerchaincode.md:228
msgid ""
"## peer chaincode query ``` Get endorsed result of chaincode function "
"call and print it. It won't generate transaction."
msgstr ""

#: ../../source/commands/peerchaincode.md:233
msgid "peer chaincode query [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:239
msgid "help for query"
msgstr ""

#: ../../source/commands/peerchaincode.md:240
msgid ""
"If true, output the query value byte array in hexadecimal. Incompatible "
"with --raw"
msgstr ""

#: ../../source/commands/peerchaincode.md:243
msgid ""
"If true, output the query value as raw bytes, otherwise format as a "
"printable string --tlsRootCertFiles stringArray   If TLS is enabled, the "
"paths to the TLS root cert files of the peers to connect to. The order "
"and number of certs specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerchaincode.md:259
msgid "## peer chaincode signpackage ``` Sign the specified chaincode package"
msgstr ""

#: ../../source/commands/peerchaincode.md:264
msgid "peer chaincode signpackage [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:267
msgid "help for signpackage"
msgstr ""

#: ../../source/commands/peerchaincode.md:282
msgid ""
"## peer chaincode upgrade ``` Upgrade an existing chaincode with the "
"specified one. The new chaincode will immediately replace the existing "
"chaincode upon the transaction committed."
msgstr ""

#: ../../source/commands/peerchaincode.md:287
msgid "peer chaincode upgrade [flags]"
msgstr ""

#: ../../source/commands/peerchaincode.md:295
msgid "help for upgrade"
msgstr ""

#: ../../source/commands/peerchaincode.md:298
msgid ""
"Path to chaincode --peerAddresses stringArray      The addresses of the "
"peers to connect to"
msgstr ""

#: ../../source/commands/peerchaincode.md:317
#: ../../source/commands/peerchannel.md:214
#: ../../source/commands/peerlifecycle.md:356
#: ../../source/commands/peernode.md:53
msgid "## Example Usage"
msgstr ""

#: ../../source/commands/peerchaincode.md:319
msgid "### peer chaincode instantiate examples"
msgstr ""

#: ../../source/commands/peerchaincode.md:321
msgid ""
"Here are some examples of the `peer chaincode instantiate` command, which"
" instantiates the chaincode named `mycc` at version `1.0` on channel "
"`mychannel`:"
msgstr ""

#: ../../source/commands/peerchaincode.md:325
msgid ""
"Using the `--tls` and `--cafile` global flags to instantiate the "
"chaincode in a network with TLS enabled:"
msgstr ""

#: ../../source/commands/peerchaincode.md:328
msgid ""
"``` export "
"ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example"
".com-cert.pem peer chaincode instantiate -o orderer.example.com:7050 "
"--tls --cafile $ORDERER_CA -C mychannel -n mycc -v 1.0 -c "
"'{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\"]}' -P \"AND "
"('Org1MSP.peer','Org2MSP.peer')\""
msgstr ""

#: ../../source/commands/peerchaincode.md:332
msgid ""
"2018-02-22 16:33:53.324 UTC [chaincodeCmd] checkChaincodeCmdParams -> "
"INFO 001 Using default escc 2018-02-22 16:33:53.324 UTC [chaincodeCmd] "
"checkChaincodeCmdParams -> INFO 002 Using default vscc 2018-02-22 "
"16:34:08.698 UTC [main] main -> INFO 003 Exiting....."
msgstr ""

#: ../../source/commands/peerchaincode.md:338
msgid ""
"Using only the command-specific options to instantiate the chaincode in a"
" network with TLS disabled:"
msgstr ""

#: ../../source/commands/peerchaincode.md:341
msgid ""
"``` peer chaincode instantiate -o orderer.example.com:7050 -C mychannel "
"-n mycc -v 1.0 -c '{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\"]}' -P "
"\"AND ('Org1MSP.peer','Org2MSP.peer')\""
msgstr ""

#: ../../source/commands/peerchaincode.md:345
msgid ""
"2018-02-22 16:34:09.324 UTC [chaincodeCmd] checkChaincodeCmdParams -> "
"INFO 001 Using default escc 2018-02-22 16:34:09.324 UTC [chaincodeCmd] "
"checkChaincodeCmdParams -> INFO 002 Using default vscc 2018-02-22 "
"16:34:24.698 UTC [main] main -> INFO 003 Exiting..... ```"
msgstr ""

#: ../../source/commands/peerchaincode.md:350
msgid "### peer chaincode invoke example"
msgstr ""

#: ../../source/commands/peerchaincode.md:352
msgid "Here is an example of the `peer chaincode invoke` command:"
msgstr ""

#: ../../source/commands/peerchaincode.md:354
msgid ""
"Invoke the chaincode named `mycc` at version `1.0` on channel `mychannel`"
" on `peer0.org1.example.com:7051` and `peer0.org2.example.com:9051` (the "
"peers defined by `--peerAddresses`), requesting to move 10 units from "
"variable `a` to variable `b`:"
msgstr ""

#: ../../source/commands/peerchaincode.md:359
msgid ""
"``` peer chaincode invoke -o orderer.example.com:7050 -C mychannel -n "
"mycc --peerAddresses peer0.org1.example.com:7051 --peerAddresses "
"peer0.org2.example.com:9051 -c "
"'{\"Args\":[\"invoke\",\"a\",\"b\",\"10\"]}'"
msgstr ""

#: ../../source/commands/peerchaincode.md:362
msgid ""
"2018-02-22 16:34:27.069 UTC [chaincodeCmd] checkChaincodeCmdParams -> "
"INFO 001 Using default escc 2018-02-22 16:34:27.069 UTC [chaincodeCmd] "
"checkChaincodeCmdParams -> INFO 002 Using default vscc . . . 2018-02-22 "
"16:34:27.106 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> DEBU 00a ESCC "
"invoke result: version:1 response:<status:200 message:\"OK\" > "
"payload:\"\\n \\237mM\\376? [\\214\\002 "
"\\332\\204\\035\\275q\\227\\2132A\\n\\204&\\2106\\037W|\\346#\\3413\\274\\022Y\\nE\\022\\024\\n\\004lscc\\022\\014\\n\\n\\n\\004mycc\\022\\002\\010\\003\\022-\\n\\004mycc\\022%\\n\\007\\n\\001a\\022\\002\\010\\003\\n\\007\\n\\001b\\022\\002\\010\\003\\032\\007\\n\\001a\\032\\00290\\032\\010\\n\\001b\\032\\003210\\032\\003\\010\\310\\001\\\"\\013\\022\\004mycc\\032\\0031.0\""
" endorsement:<endorser:\"\\n\\007Org1MSP\\022\\262\\006-----BEGIN "
"CERTIFICATE-----\\nMIICLjCCAdWgAwIBAgIRAJYomxY2cqHA/fbRnH5a/bwwCgYIKoZIzj0EAwIwczEL\\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHDAaBgNVBAMTE2Nh\\nLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwMjIyMTYyODE0WhcNMjgwMjIwMTYyODE0\\nWjBwMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMN\\nU2FuIEZyYW5jaXNjbzETMBEGA1UECxMKRmFicmljUGVlcjEfMB0GA1UEAxMWcGVl\\ncjAub3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDEa\\nWNNniN3qOCQL89BGWfY39f5V3o1pi//7JFDHATJXtLgJhkK5KosDdHuKLYbCqvge\\n46u3AC16MZyJRvKBiw6jTTBLMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAA\\nMCsGA1UdIwQkMCKAIN7dJR9dimkFtkus0R5pAOlRz5SA3FB5t8Eaxl9A7lkgMAoG\\nCCqGSM49BAMCA0cAMEQCIC2DAsO9QZzQmKi8OOKwcCh9Gd01YmWIN3oVmaCRr8C7\\nAiAlQffq2JFlbh6OWURGOko6RckizG8oVOldZG/Xj3C8lA==\\n"
"-----END CERTIFICATE-----\\n\" signature:\"0D\\002 "
"\\022_\\342\\350\\344\\231G&\\237\\n\\244\\375\\302J\\220l\\302\\345\\210\\335D\\250y\\253P\\0214:\\221e\\332@\\002"
" "
"\\000\\254\\361\\224\\247\\210\\214L\\277\\370\\222\\213\\217\\301\\r\\341v\\227\\265\\277\\336\\256^\\217\\336\\005y*\\321\\023\\025\\367\""
" > 2018-02-22 16:34:27.107 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> "
"INFO 00b Chaincode invoke successful. result: status:200 2018-02-22 "
"16:34:27.107 UTC [main] main -> INFO 00c Exiting....."
msgstr ""

#: ../../source/commands/peerchaincode.md:373
msgid ""
"Here you can see that the invoke was submitted successfully based on the "
"log message:"
msgstr ""

#: ../../source/commands/peerchaincode.md:376
msgid ""
"``` 2018-02-22 16:34:27.107 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> "
"INFO 00b Chaincode invoke successful. result: status:200"
msgstr ""

#: ../../source/commands/peerchaincode.md:381
msgid ""
"A successful response indicates that the transaction was submitted for "
"ordering successfully. The transaction will then be added to a block and,"
" finally, validated or invalidated by each peer on the channel."
msgstr ""

#: ../../source/commands/peerchaincode.md:385
msgid "### peer chaincode list example"
msgstr ""

#: ../../source/commands/peerchaincode.md:387
msgid "Here are some examples of the `peer chaincode list ` command:"
msgstr ""

#: ../../source/commands/peerchaincode.md:389
msgid "Using the `--installed` flag to list the chaincodes installed on a peer."
msgstr ""

#: ../../source/commands/peerchaincode.md:391
msgid "``` peer chaincode list --installed"
msgstr ""

#: ../../source/commands/peerchaincode.md:394
msgid ""
"Get installed chaincodes on peer: Name: mycc, Version: 1.0, Path: "
"github.com/hyperledger/fabric-samples/chaincode/abstore/go, Id: "
"8cc2730fdafd0b28ef734eac12b29df5fc98ad98bdb1b7e0ef96265c3d893d61 "
"2018-02-22 17:07:13.476 UTC [main] main -> INFO 001 Exiting..... ```"
msgstr ""

#: ../../source/commands/peerchaincode.md:399
msgid ""
"You can see that the peer has installed a chaincode called `mycc` which "
"is at version `1.0`."
msgstr ""

#: ../../source/commands/peerchaincode.md:402
msgid ""
"Using the `--instantiated` in combination with the `-C` (channel ID) flag"
" to list the chaincodes instantiated on a channel."
msgstr ""

#: ../../source/commands/peerchaincode.md:405
msgid "``` peer chaincode list --instantiated -C mychannel"
msgstr ""

#: ../../source/commands/peerchaincode.md:408
msgid ""
"Get instantiated chaincodes on channel mychannel: Name: mycc, Version: "
"1.0, Path: github.com/hyperledger/fabric-samples/chaincode/abstore/go, "
"Escc: escc, Vscc: vscc 2018-02-22 17:07:42.969 UTC [main] main -> INFO "
"001 Exiting....."
msgstr ""

#: ../../source/commands/peerchaincode.md:414
msgid ""
"You can see that chaincode `mycc` at version `1.0` is instantiated on "
"channel `mychannel`."
msgstr ""

#: ../../source/commands/peerchaincode.md:417
msgid "### peer chaincode package example"
msgstr ""

#: ../../source/commands/peerchaincode.md:419
msgid ""
"Here is an example of the `peer chaincode package` command, which "
"packages the chaincode named `mycc` at version `1.1`, creates the "
"chaincode deployment spec, signs the package using the local MSP, and "
"outputs it as `ccpack.out`:"
msgstr ""

#: ../../source/commands/peerchaincode.md:425
msgid ""
"peer chaincode package ccpack.out -n mycc -p github.com/hyperledger"
"/fabric-samples/chaincode/abstore/go -v 1.1 -s -S . . . 2018-02-22 "
"17:27:01.404 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using"
" default escc 2018-02-22 17:27:01.405 UTC [chaincodeCmd] "
"checkChaincodeCmdParams -> INFO 004 Using default vscc . . . 2018-02-22 "
"17:27:01.879 UTC [chaincodeCmd] chaincodePackage -> DEBU 011 Packaged "
"chaincode into deployment spec of size <3426>, with args = [ccpack.out] "
"2018-02-22 17:27:01.879 UTC [main] main -> INFO 012 Exiting....."
msgstr ""

#: ../../source/commands/peerchaincode.md:439
msgid "### peer chaincode query example"
msgstr ""

#: ../../source/commands/peerchaincode.md:441
msgid ""
"Here is an example of the `peer chaincode query` command, which queries "
"the peer ledger for the chaincode named `mycc` at version `1.0` for the "
"value of variable `a`:"
msgstr ""

#: ../../source/commands/peerchaincode.md:445
msgid ""
"You can see from the output that variable `a` had a value of 90 at the "
"time of the query."
msgstr ""

#: ../../source/commands/peerchaincode.md:448
msgid ""
"``` peer chaincode query -C mychannel -n mycc -c "
"'{\"Args\":[\"query\",\"a\"]}'"
msgstr ""

#: ../../source/commands/peerchaincode.md:451
msgid ""
"2018-02-22 16:34:30.816 UTC [chaincodeCmd] checkChaincodeCmdParams -> "
"INFO 001 Using default escc 2018-02-22 16:34:30.816 UTC [chaincodeCmd] "
"checkChaincodeCmdParams -> INFO 002 Using default vscc Query Result: 90"
msgstr ""

#: ../../source/commands/peerchaincode.md:457
msgid "### peer chaincode signpackage example"
msgstr ""

#: ../../source/commands/peerchaincode.md:459
msgid ""
"Here is an example of the `peer chaincode signpackage` command, which "
"accepts an existing signed  package and creates a new one with signature "
"of the local MSP appended to it."
msgstr ""

#: ../../source/commands/peerchaincode.md:463
msgid ""
"``` peer chaincode signpackage ccwith1sig.pak ccwith2sig.pak Wrote signed"
" package to ccwith2sig.pak successfully 2018-02-24 19:32:47.189 EST "
"[main] main -> INFO 002 Exiting..... ```"
msgstr ""

#: ../../source/commands/peerchaincode.md:469
msgid "### peer chaincode upgrade example"
msgstr ""

#: ../../source/commands/peerchaincode.md:471
msgid ""
"Here is an example of the `peer chaincode upgrade` command, which "
"upgrades the chaincode named `mycc` at version `1.1` on channel "
"`mychannel` to version `1.2`, which contains a new variable `c`:"
msgstr ""

#: ../../source/commands/peerchaincode.md:475
msgid ""
"Using the `--tls` and `--cafile` global flags to upgrade the chaincode in"
" a network with TLS enabled:"
msgstr ""

#: ../../source/commands/peerchaincode.md:478
msgid ""
"``` export "
"ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example"
".com-cert.pem peer chaincode upgrade -o orderer.example.com:7050 --tls "
"--cafile $ORDERER_CA -C mychannel -n mycc -v 1.2 -c "
"'{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\",\"c\",\"300\"]}' -P "
"\"AND ('Org1MSP.peer','Org2MSP.peer')\" . . . 2018-02-22 18:26:31.433 UTC"
" [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc "
"2018-02-22 18:26:31.434 UTC [chaincodeCmd] checkChaincodeCmdParams -> "
"INFO 004 Using default vscc 2018-02-22 18:26:31.435 UTC [chaincodeCmd] "
"getChaincodeSpec -> DEBU 005 java chaincode enabled 2018-02-22 "
"18:26:31.435 UTC [chaincodeCmd] upgrade -> DEBU 006 Get upgrade proposal "
"for chaincode <name:\"mycc\" version:\"1.1\" > . . . 2018-02-22 "
"18:26:46.687 UTC [chaincodeCmd] upgrade -> DEBU 009 endorse upgrade "
"proposal, get response <status:200 message:\"OK\" "
"payload:\"\\n\\004mycc\\022\\0031.1\\032\\004escc\\\"\\004vscc*,\\022\\014\\022\\n\\010\\001\\022\\002\\010\\000\\022\\002\\010\\001\\032\\r\\022\\013\\n\\007Org1MSP\\020\\003\\032\\r\\022\\013\\n\\007Org2MSP\\020\\0032f\\n"
" "
"\\261g(^v\\021\\220\\240\\332\\251\\014\\204V\\210P\\310o\\231\\271\\036\\301\\022\\032\\205fC[|=\\215\\372\\223\\022"
" "
"\\311b\\025?\\323N\\343\\325\\032\\005\\365\\236\\001XKj\\004E\\351\\007\\247\\265fu\\305j\\367\\331\\275\\253\\307R\\032"
" "
"\\014H#\\014\\272!#\\345\\306s\\323\\371\\350\\364\\006.\\000\\356\\230\\353\\270\\263\\215\\217\\303\\256\\220i^\\277\\305\\214:"
" "
"\\375\\200zY\\275\\203}\\375\\244\\205\\035\\340\\226]l!uE\\334\\273\\214\\214\\020\\303\\3474\\360\\014\\234-\\006\\315B\\031\\022\\010\\022\\006\\010\\001\\022\\002\\010\\000\\032\\r\\022\\013\\n\\007Org1MSP\\020\\001\""
" > . . . 2018-02-22 18:26:46.693 UTC [chaincodeCmd] upgrade -> DEBU 00c "
"Get Signed envelope 2018-02-22 18:26:46.693 UTC [chaincodeCmd] "
"chaincodeUpgrade -> DEBU 00d Send signed envelope to orderer 2018-02-22 "
"18:26:46.908 UTC [main] main -> INFO 00e Exiting..... ```"
msgstr ""

#: ../../source/commands/peerchaincode.md:500
msgid ""
"Using only the command-specific options to upgrade the chaincode in a "
"network with TLS disabled:"
msgstr ""

#: ../../source/commands/peerchaincode.md:503
msgid ""
"``` peer chaincode upgrade -o orderer.example.com:7050 -C mychannel -n "
"mycc -v 1.2 -c "
"'{\"Args\":[\"init\",\"a\",\"100\",\"b\",\"200\",\"c\",\"300\"]}' -P "
"\"AND ('Org1MSP.peer','Org2MSP.peer')\" . . . 2018-02-22 18:28:31.433 UTC"
" [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc "
"2018-02-22 18:28:31.434 UTC [chaincodeCmd] checkChaincodeCmdParams -> "
"INFO 004 Using default vscc 2018-02-22 18:28:31.435 UTC [chaincodeCmd] "
"getChaincodeSpec -> DEBU 005 java chaincode enabled 2018-02-22 "
"18:28:31.435 UTC [chaincodeCmd] upgrade -> DEBU 006 Get upgrade proposal "
"for chaincode <name:\"mycc\" version:\"1.1\" > . . . 2018-02-22 "
"18:28:46.687 UTC [chaincodeCmd] upgrade -> DEBU 009 endorse upgrade "
"proposal, get response <status:200 message:\"OK\" "
"payload:\"\\n\\004mycc\\022\\0031.1\\032\\004escc\\\"\\004vscc*,\\022\\014\\022\\n\\010\\001\\022\\002\\010\\000\\022\\002\\010\\001\\032\\r\\022\\013\\n\\007Org1MSP\\020\\003\\032\\r\\022\\013\\n\\007Org2MSP\\020\\0032f\\n"
" "
"\\261g(^v\\021\\220\\240\\332\\251\\014\\204V\\210P\\310o\\231\\271\\036\\301\\022\\032\\205fC[|=\\215\\372\\223\\022"
" "
"\\311b\\025?\\323N\\343\\325\\032\\005\\365\\236\\001XKj\\004E\\351\\007\\247\\265fu\\305j\\367\\331\\275\\253\\307R\\032"
" "
"\\014H#\\014\\272!#\\345\\306s\\323\\371\\350\\364\\006.\\000\\356\\230\\353\\270\\263\\215\\217\\303\\256\\220i^\\277\\305\\214:"
" "
"\\375\\200zY\\275\\203}\\375\\244\\205\\035\\340\\226]l!uE\\334\\273\\214\\214\\020\\303\\3474\\360\\014\\234-\\006\\315B\\031\\022\\010\\022\\006\\010\\001\\022\\002\\010\\000\\032\\r\\022\\013\\n\\007Org1MSP\\020\\001\""
" > . . . 2018-02-22 18:28:46.693 UTC [chaincodeCmd] upgrade -> DEBU 00c "
"Get Signed envelope 2018-02-22 18:28:46.693 UTC [chaincodeCmd] "
"chaincodeUpgrade -> DEBU 00d Send signed envelope to orderer 2018-02-22 "
"18:28:46.908 UTC [main] main -> INFO 00e Exiting..... ```"
msgstr ""

#: ../../source/commands/peerchannel.md:1
msgid "# peer channel"
msgstr ""

#: ../../source/commands/peerchannel.md:3
msgid ""
"The `peer channel` command allows administrators to perform channel "
"related operations on a peer, such as joining a channel or listing the "
"channels to which a peer is joined."
msgstr ""

#: ../../source/commands/peerchannel.md:9
msgid "The `peer channel` command has the following subcommands:"
msgstr ""

#: ../../source/commands/peerchannel.md:11
msgid "create"
msgstr ""

#: ../../source/commands/peerchannel.md:12
msgid "fetch"
msgstr ""

#: ../../source/commands/peerchannel.md:13
msgid "getinfo"
msgstr ""

#: ../../source/commands/peerchannel.md:14
msgid "join"
msgstr ""

#: ../../source/commands/peerchannel.md:16
msgid "signconfigtx"
msgstr ""

#: ../../source/commands/peerchannel.md:17
msgid "update"
msgstr ""

#: ../../source/commands/peerchannel.md:19
msgid ""
"## peer channel ``` Operate a channel: "
"create|fetch|join|list|update|signconfigtx|getinfo."
msgstr ""

#: ../../source/commands/peerchannel.md:24
msgid "peer channel [command]"
msgstr ""

#: ../../source/commands/peerchannel.md:33
#: ../../source/commands/peerlifecycle.md:40
#: ../../source/commands/peerlifecycle.md:65
msgid "Available Commands:"
msgstr ""

#: ../../source/commands/peerchannel.md:27
msgid ""
"create       Create a channel fetch        Fetch a block getinfo      get"
" blockchain information of a specified channel. join         Joins the "
"peer to a channel. list         List of channels peer has joined. "
"signconfigtx Signs a configtx update. update       Send a configtx "
"update."
msgstr ""

#: ../../source/commands/peerchannel.md:40
msgid ""
"help for channel --keyfile string                      Path to file "
"containing PEM-encoded private key to use for mutual TLS communication "
"with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerchannel.md:42
#: ../../source/commands/peerchannel.md:70
#: ../../source/commands/peerchannel.md:94
#: ../../source/commands/peerchannel.md:117
#: ../../source/commands/peerchannel.md:140
#: ../../source/commands/peerchannel.md:162
#: ../../source/commands/peerchannel.md:185
#: ../../source/commands/peerchannel.md:209
#: ../../source/commands/peercommand.md:76
#: ../../source/commands/peerlifecycle.md:74
#: ../../source/commands/peerlifecycle.md:104
#: ../../source/commands/peerlifecycle.md:129
#: ../../source/commands/peerlifecycle.md:155
#: ../../source/commands/peerlifecycle.md:182
#: ../../source/commands/peerlifecycle.md:220
#: ../../source/commands/peerlifecycle.md:249
#: ../../source/commands/peerlifecycle.md:285
#: ../../source/commands/peerlifecycle.md:322
#: ../../source/commands/peerlifecycle.md:350
msgid ""
"Ordering service endpoint --ordererTLSHostnameOverride string   The "
"hostname override to use when validating the TLS connection to the "
"orderer. --tls                                 Use TLS when communicating"
" with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerchannel.md:46
msgid ""
"Use \"peer channel [command] --help\" for more information about a "
"command. ```"
msgstr ""

#: ../../source/commands/peerchannel.md:50
msgid ""
"## peer channel create ``` Create a channel and write the genesis block "
"to a file."
msgstr ""

#: ../../source/commands/peerchannel.md:55
msgid "peer channel create [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:58
#: ../../source/commands/peerchannel.md:85
#: ../../source/commands/peerchannel.md:108
#: ../../source/commands/peerchannel.md:199
msgid ""
"In case of a newChain command, the channel ID to create. It must be all "
"lower case, less than 250 characters long and match the regular "
"expression: [a-z][a-z0-9.-]*"
msgstr ""

#: ../../source/commands/peerchannel.md:59
#: ../../source/commands/peerchannel.md:176
#: ../../source/commands/peerchannel.md:200
msgid ""
"Configuration transaction file generated by a tool such as configtxgen "
"for submitting to orderer"
msgstr ""

#: ../../source/commands/peerchannel.md:60
msgid ""
"help for create --outputBlock string   The path to write the genesis "
"block for the channel. (default ./<channelID>.block)"
msgstr ""

#: ../../source/commands/peerchannel.md:62
msgid "Channel creation timeout (default 10s)"
msgstr ""

#: ../../source/commands/peerchannel.md:76
msgid "## peer channel fetch ``` Fetch a specified block, writing it to a file."
msgstr ""

#: ../../source/commands/peerchannel.md:81
msgid "peer channel fetch <newest|oldest|config|(number)> [outputfile] [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:84
msgid ""
"Whether fetch requests should ignore errors and return blocks on a best "
"effort basis"
msgstr ""

#: ../../source/commands/peerchannel.md:86
msgid "help for fetch"
msgstr ""

#: ../../source/commands/peerchannel.md:100
msgid ""
"## peer channel getinfo ``` get blockchain information of a specified "
"channel. Requires '-c'."
msgstr ""

#: ../../source/commands/peerchannel.md:105
msgid "peer channel getinfo [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:109
msgid "help for getinfo"
msgstr ""

#: ../../source/commands/peerchannel.md:123
msgid "## peer channel join ``` Joins the peer to a channel."
msgstr ""

#: ../../source/commands/peerchannel.md:128
#: ../../source/commands/peercommand.md:64
msgid "peer channel join [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:131
#: ../../source/commands/peercommand.md:67
msgid "Path to file containing genesis block"
msgstr ""

#: ../../source/commands/peerchannel.md:132
#: ../../source/commands/peercommand.md:68
msgid "help for join"
msgstr ""

#: ../../source/commands/peerchannel.md:146
msgid "## peer channel list ``` List of channels peer has joined."
msgstr ""

#: ../../source/commands/peerchannel.md:151
msgid "peer channel list [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:154
msgid "help for list"
msgstr ""

#: ../../source/commands/peerchannel.md:168
msgid ""
"## peer channel signconfigtx ``` Signs the supplied configtx update file "
"in place on the filesystem. Requires '-f'."
msgstr ""

#: ../../source/commands/peerchannel.md:173
msgid "peer channel signconfigtx [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:177
msgid "help for signconfigtx"
msgstr ""

#: ../../source/commands/peerchannel.md:191
msgid ""
"## peer channel update ``` Signs and sends the supplied configtx update "
"file to the channel. Requires '-f', '-o', '-c'."
msgstr ""

#: ../../source/commands/peerchannel.md:196
msgid "peer channel update [flags]"
msgstr ""

#: ../../source/commands/peerchannel.md:201
msgid "help for update"
msgstr ""

#: ../../source/commands/peerchannel.md:216
msgid "### peer channel create examples"
msgstr ""

#: ../../source/commands/peerchannel.md:218
msgid ""
"Here's an example that uses the `--orderer` global flag on the `peer "
"channel create` command."
msgstr ""

#: ../../source/commands/peerchannel.md:221
msgid ""
"Create a sample channel `mychannel` defined by the configuration "
"transaction contained in file `./createchannel.tx`. Use the orderer at "
"`orderer.example.com:7050`."
msgstr ""

#: ../../source/commands/peerchannel.md:224
msgid ""
"``` peer channel create -c mychannel -f ./createchannel.tx --orderer "
"orderer.example.com:7050"
msgstr ""

#: ../../source/commands/peerchannel.md:227
msgid ""
"2018-02-25 08:23:57.548 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized 2018-02-25 08:23:57.626 UTC "
"[channelCmd] InitCmdFactory -> INFO 019 Endorser and orderer connections "
"initialized 2018-02-25 08:23:57.834 UTC [channelCmd] readBlock -> INFO "
"020 Received block: 0 2018-02-25 08:23:57.835 UTC [main] main -> INFO 021"
" Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:234
msgid ""
"Block 0 is returned indicating that the channel has been successfully "
"created."
msgstr ""

#: ../../source/commands/peerchannel.md:236
msgid "Here's an example of the `peer channel create` command option."
msgstr ""

#: ../../source/commands/peerchannel.md:238
msgid ""
"Create a new channel `mychannel` for the network, using the orderer at ip"
" address `orderer.example.com:7050`.  The configuration update "
"transaction required to create this channel is defined the file "
"`./createchannel.tx`. Wait 30 seconds for the channel to be created."
msgstr ""

#: ../../source/commands/peerchannel.md:244
msgid ""
"peer channel create -c mychannel --orderer orderer.example.com:7050 -f "
"./createchannel.tx -t 30s"
msgstr ""

#: ../../source/commands/peerchannel.md:246
msgid ""
"2018-02-23 06:31:58.568 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized 2018-02-23 06:31:58.669 UTC "
"[channelCmd] InitCmdFactory -> INFO 019 Endorser and orderer connections "
"initialized 2018-02-23 06:31:58.877 UTC [channelCmd] readBlock -> INFO "
"020 Received block: 0 2018-02-23 06:31:58.878 UTC [main] main -> INFO 021"
" Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:251
#: ../../source/commands/peerchannel.md:281
#: ../../source/commands/peerchannel.md:300
#: ../../source/commands/peerchannel.md:389
msgid "ls -l"
msgstr ""

#: ../../source/commands/peerchannel.md:253
msgid "-rw-r--r-- 1 root root 11982 Feb 25 12:24 mychannel.block"
msgstr ""

#: ../../source/commands/peerchannel.md:257
msgid ""
"You can see that channel `mychannel` has been successfully created, as "
"indicated in the output where block 0 (zero) is added to the blockchain "
"for this channel and returned to the peer, where it is stored in the "
"local directory as `mychannel.block`."
msgstr ""

#: ../../source/commands/peerchannel.md:262
msgid ""
"Block zero is often called the *genesis block* as it provides the "
"starting configuration for the channel.  All subsequent updates to the "
"channel will be captured as configuration blocks on the channel's "
"blockchain, each of which supersedes the previous configuration."
msgstr ""

#: ../../source/commands/peerchannel.md:267
msgid "### peer channel fetch example"
msgstr ""

#: ../../source/commands/peerchannel.md:269
msgid "Here's some examples of the `peer channel fetch` command."
msgstr ""

#: ../../source/commands/peerchannel.md:271
msgid ""
"Using the `newest` option to retrieve the most recent channel block, and "
"store it in   the file `mychannel.block`."
msgstr ""

#: ../../source/commands/peerchannel.md:274
msgid ""
"``` peer channel fetch newest mychannel.block -c mychannel --orderer "
"orderer.example.com:7050"
msgstr ""

#: ../../source/commands/peerchannel.md:277
msgid ""
"2018-02-25 13:10:16.137 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized 2018-02-25 13:10:16.144 UTC "
"[channelCmd] readBlock -> INFO 00a Received block: 32 2018-02-25 "
"13:10:16.145 UTC [main] main -> INFO 00b Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:283
msgid "-rw-r--r-- 1 root root 11982 Feb 25 13:10 mychannel.block"
msgstr ""

#: ../../source/commands/peerchannel.md:287
msgid ""
"You can see that the retrieved block is number 32, and that the "
"information has been written to the file `mychannel.block`."
msgstr ""

#: ../../source/commands/peerchannel.md:290
msgid ""
"Using the `(block number)` option to retrieve a specific block -- in this"
" case, block number 16 -- and store it in the default block file."
msgstr ""

#: ../../source/commands/peerchannel.md:293
msgid "``` peer channel fetch 16  -c mychannel --orderer orderer.example.com:7050"
msgstr ""

#: ../../source/commands/peerchannel.md:296
msgid ""
"2018-02-25 13:46:50.296 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized 2018-02-25 13:46:50.302 UTC "
"[channelCmd] readBlock -> INFO 00a Received block: 16 2018-02-25 "
"13:46:50.302 UTC [main] main -> INFO 00b Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:302
msgid ""
"-rw-r--r-- 1 root root 11982 Feb 25 13:10 mychannel.block -rw-r--r-- 1 "
"root root  4783 Feb 25 13:46 mychannel_16.block"
msgstr ""

#: ../../source/commands/peerchannel.md:307
msgid ""
"You can see that the retrieved block is number 16, and that the "
"information has been written to the default file `mychannel_16.block`."
msgstr ""

#: ../../source/commands/peerchannel.md:310
msgid ""
"For configuration blocks, the block file can be decoded using the "
"[`configtxlator` command](./configtxlator.html). See this command for an "
"example of decoded output. User transaction blocks can also be decoded, "
"but a user program must be written to do this."
msgstr ""

#: ../../source/commands/peerchannel.md:315
msgid "### peer channel getinfo example"
msgstr ""

#: ../../source/commands/peerchannel.md:317
msgid "Here's an example of the `peer channel getinfo` command."
msgstr ""

#: ../../source/commands/peerchannel.md:319
msgid "Get information about the local peer for channel `mychannel`."
msgstr ""

#: ../../source/commands/peerchannel.md:321
msgid "``` peer channel getinfo -c mychannel"
msgstr ""

#: ../../source/commands/peerchannel.md:324
msgid ""
"2018-02-25 15:15:44.135 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized Blockchain info: "
"{\"height\":5,\"currentBlockHash\":\"JgK9lcaPUNmFb5Mp1qe1SVMsx3o/22Ct4+n5tejcXCw=\",\"previousBlockHash\":\"f8lZXoAn3gF86zrFq7L1DzW2aKuabH9Ow6SIE5Y04a4=\"}"
" 2018-02-25 15:15:44.139 UTC [main] main -> INFO 006 Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:330
msgid ""
"You can see that the latest block for channel `mychannel` is block 5.  "
"You can also see the cryptographic hashes for the most recent blocks in "
"the channel's blockchain."
msgstr ""

#: ../../source/commands/peerchannel.md:334
msgid "### peer channel join example"
msgstr ""

#: ../../source/commands/peerchannel.md:336
msgid "Here's an example of the `peer channel join` command."
msgstr ""

#: ../../source/commands/peerchannel.md:338
msgid ""
"Join a peer to the channel defined in the genesis block identified by the"
" file `./mychannel.genesis.block`. In this example, the channel block was"
" previously retrieved by the `peer channel fetch` command."
msgstr ""

#: ../../source/commands/peerchannel.md:342
msgid "``` peer channel join -b ./mychannel.genesis.block"
msgstr ""

#: ../../source/commands/peerchannel.md:345
msgid ""
"2018-02-25 12:25:26.511 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized 2018-02-25 12:25:26.571 UTC "
"[channelCmd] executeJoin -> INFO 006 Successfully submitted proposal to "
"join channel 2018-02-25 12:25:26.571 UTC [main] main -> INFO 007 "
"Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:351
msgid ""
"You can see that the peer has successfully made a request to join the "
"channel."
msgstr ""

#: ../../source/commands/peerchannel.md:353
msgid "### peer channel list example"
msgstr ""

#: ../../source/commands/peerchannel.md:355
msgid "Here's an example of the `peer channel list` command."
msgstr ""

#: ../../source/commands/peerchannel.md:357
msgid "List the channels to which a peer is joined."
msgstr ""

#: ../../source/commands/peerchannel.md:359
msgid "``` peer channel list"
msgstr ""

#: ../../source/commands/peerchannel.md:362
msgid ""
"2018-02-25 14:21:20.361 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized Channels peers has joined: "
"mychannel 2018-02-25 14:21:20.372 UTC [main] main -> INFO 006 "
"Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:369
msgid "You can see that the peer is joined to channel `mychannel`."
msgstr ""

#: ../../source/commands/peerchannel.md:371
msgid "### peer channel signconfigtx example"
msgstr ""

#: ../../source/commands/peerchannel.md:373
msgid "Here's an example of the `peer channel signconfigtx` command."
msgstr ""

#: ../../source/commands/peerchannel.md:375
msgid ""
"Sign the `channel update` transaction defined in the file "
"`./updatechannel.tx`. The example lists the configuration transaction "
"file before and after the command."
msgstr ""

#: ../../source/commands/peerchannel.md:379
msgid "``` ls -l"
msgstr ""

#: ../../source/commands/peerchannel.md:382
msgid "1 anthonyodowd  staff   284 25 Feb 18:16 updatechannel.tx"
msgstr ""

#: ../../source/commands/peerchannel.md:384
msgid "peer channel signconfigtx -f updatechannel.tx"
msgstr ""

#: ../../source/commands/peerchannel.md:386
msgid ""
"2018-02-25 18:16:44.456 GMT [channelCmd] InitCmdFactory -> INFO 001 "
"Endorser and orderer connections initialized 2018-02-25 18:16:44.459 GMT "
"[main] main -> INFO 002 Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:391
msgid "1 anthonyodowd  staff  2180 25 Feb 18:16 updatechannel.tx"
msgstr ""

#: ../../source/commands/peerchannel.md:395
msgid ""
"You can see that the peer has successfully signed the configuration "
"transaction by the increase in the size of the file `updatechannel.tx` "
"from 284 bytes to 2180 bytes."
msgstr ""

#: ../../source/commands/peerchannel.md:399
msgid "### peer channel update example"
msgstr ""

#: ../../source/commands/peerchannel.md:401
msgid "Here's an example of the `peer channel update` command."
msgstr ""

#: ../../source/commands/peerchannel.md:403
msgid ""
"Update the channel `mychannel` using the configuration transaction "
"defined in the file `./updatechannel.tx`. Use the orderer at ip address "
"`orderer.example.com:7050` to send the configuration transaction to all "
"peers in the channel to update their copy of the channel configuration."
msgstr ""

#: ../../source/commands/peerchannel.md:408
msgid ""
"``` peer channel update -c mychannel -f ./updatechannel.tx -o "
"orderer.example.com:7050"
msgstr ""

#: ../../source/commands/peerchannel.md:411
msgid ""
"2018-02-23 06:32:11.569 UTC [channelCmd] InitCmdFactory -> INFO 003 "
"Endorser and orderer connections initialized 2018-02-23 06:32:11.626 UTC "
"[main] main -> INFO 010 Exiting....."
msgstr ""

#: ../../source/commands/peerchannel.md:416
msgid "At this point, the channel `mychannel` has been successfully updated."
msgstr ""

#: ../../source/commands/peercommand.md:1
msgid "# peer"
msgstr ""

#: ../../source/commands/peercommand.md:3
msgid "## Description"
msgstr ""

#: ../../source/commands/peercommand.md:5
msgid ""
"The `peer` command has five different subcommands, each of which allows "
"administrators to perform a specific set of tasks related to a peer.  For"
" example, you can use the `peer channel` subcommand to join a peer to a "
"channel, or the `peer  chaincode` command to deploy a smart contract "
"chaincode to a peer."
msgstr ""

#: ../../source/commands/peercommand.md:13
msgid "The `peer` command has five different subcommands within it:"
msgstr ""

#: ../../source/commands/peercommand.md:15
msgid ""
"``` peer chaincode [option] [flags] peer channel   [option] [flags] peer "
"node      [option] [flags] peer version   [option] [flags] ```"
msgstr ""

#: ../../source/commands/peercommand.md:22
msgid ""
"Each subcommand has different options available, and these are described "
"in their own dedicated topic. For brevity, we often refer to a command "
"(`peer`), a subcommand (`channel`), or subcommand option (`fetch`) simply"
" as a **command**."
msgstr ""

#: ../../source/commands/peercommand.md:26
msgid ""
"If a subcommand is specified without an option, then it will return some "
"high level help text as described in the `--help` flag below."
msgstr ""

#: ../../source/commands/peercommand.md:31
msgid ""
"Each `peer` subcommand has a specific set of flags associated with it, "
"many of which are designated *global* because they can be used in all "
"subcommand options. These flags are described with the relevant `peer` "
"subcommand."
msgstr ""

#: ../../source/commands/peercommand.md:35
msgid "The top level `peer` command has the following flag:"
msgstr ""

#: ../../source/commands/peercommand.md:37
msgid "`--help`"
msgstr ""

#: ../../source/commands/peercommand.md:39
msgid ""
"Use `--help` to get brief help text for any `peer` command. The `--help` "
"flag is very useful -- it can be used to get command help, subcommand "
"help, and even option help."
msgstr ""

#: ../../source/commands/peercommand.md:43
msgid "For example ``` peer --help peer channel --help peer channel list --help"
msgstr ""

#: ../../source/commands/peercommand.md:49
msgid "``` See individual `peer` subcommands for more detail."
msgstr ""

#: ../../source/commands/peercommand.md:54
msgid "Here is an example using the available flag on the `peer` command."
msgstr ""

#: ../../source/commands/peercommand.md:56
msgid "Using the `--help` flag on the `peer channel join` command."
msgstr ""

#: ../../source/commands/peercommand.md:58
msgid "``` peer channel join --help"
msgstr ""

#: ../../source/commands/peercommand.md:61
msgid "Joins the peer to a channel."
msgstr ""

#: ../../source/commands/peercommand.md:80
msgid "``` This shows brief help syntax for the `peer channel join` command."
msgstr ""

#: ../../source/commands/peerlifecycle.md:1
msgid "# peer lifecycle chaincode"
msgstr ""

#: ../../source/commands/peerlifecycle.md:3
msgid ""
"The `peer lifecycle chaincode` subcommand allows administrators to use "
"the Fabric chaincode lifecycle to package a chaincode, install it on your"
" peers, approve a chaincode definition for your organization, and then "
"commit the definition to a channel. The chaincode is ready to be used "
"after the definition has been successfully committed to the channel. For "
"more information, visit [Fabric chaincode "
"lifecycle](../chaincode_lifecycle.html)."
msgstr ""

#: ../../source/commands/peerlifecycle.md:10
msgid ""
"*Note: These instructions use the Fabric chaincode lifecycle introduced "
"in the v2.0 release. If you would like to use the old lifecycle to "
"install and instantiate a chaincode, visit the [peer "
"chaincode](peerchaincode.html) command reference.*"
msgstr ""

#: ../../source/commands/peerlifecycle.md:17
msgid "The `peer lifecycle chaincode` command has the following subcommands:"
msgstr ""

#: ../../source/commands/peerlifecycle.md:21
msgid "queryinstalled"
msgstr ""

#: ../../source/commands/peerlifecycle.md:22
msgid "getinstalledpackage"
msgstr ""

#: ../../source/commands/peerlifecycle.md:23
msgid "approveformyorg"
msgstr ""

#: ../../source/commands/peerlifecycle.md:24
msgid "queryapproved"
msgstr ""

#: ../../source/commands/peerlifecycle.md:25
msgid "checkcommitreadiness"
msgstr ""

#: ../../source/commands/peerlifecycle.md:26
msgid "commit"
msgstr ""

#: ../../source/commands/peerlifecycle.md:27
msgid "querycommitted"
msgstr ""

#: ../../source/commands/peerlifecycle.md:29
msgid ""
"Each peer lifecycle chaincode subcommand is described together with its "
"options in its own section in this topic."
msgstr ""

#: ../../source/commands/peerlifecycle.md:32
msgid "## peer lifecycle ``` Perform _lifecycle operations"
msgstr ""

#: ../../source/commands/peerlifecycle.md:37
msgid "peer lifecycle [command]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:40
msgid ""
"chaincode   Perform chaincode operations: "
"package|install|queryinstalled|getinstalledpackage|approveformyorg|queryapproved|checkcommitreadiness|commit|querycommitted"
msgstr ""

#: ../../source/commands/peerlifecycle.md:43
msgid "help for lifecycle"
msgstr ""

#: ../../source/commands/peerlifecycle.md:45
msgid ""
"Use \"peer lifecycle [command] --help\" for more information about a "
"command. ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:49
msgid ""
"## peer lifecycle chaincode ``` Perform chaincode operations: "
"package|install|queryinstalled|getinstalledpackage|approveformyorg|queryapproved|checkcommitreadiness|commit|querycommitted"
msgstr ""

#: ../../source/commands/peerlifecycle.md:54
msgid "peer lifecycle chaincode [command]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:57
msgid ""
"approveformyorg      Approve the chaincode definition for my org. "
"checkcommitreadiness Check whether a chaincode definition is ready to be "
"committed on a channel. commit               Commit the chaincode "
"definition on the channel. getinstalledpackage  Get an installed "
"chaincode package from a peer. install              Install a chaincode. "
"package              Package a chaincode queryapproved        Query an "
"org's approved chaincode definition from its peer. querycommitted       "
"Query the committed chaincode definitions by channel on a peer. "
"queryinstalled       Query the installed chaincodes on a peer."
msgstr ""

#: ../../source/commands/peerlifecycle.md:72
msgid ""
"help for chaincode --keyfile string                      Path to file "
"containing PEM-encoded private key to use for mutual TLS communication "
"with the orderer endpoint"
msgstr ""

#: ../../source/commands/peerlifecycle.md:78
msgid ""
"Use \"peer lifecycle chaincode [command] --help\" for more information "
"about a command. ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:82
msgid ""
"## peer lifecycle chaincode package ``` Package a chaincode and write the"
" package to a file."
msgstr ""

#: ../../source/commands/peerlifecycle.md:87
msgid "peer lifecycle chaincode package [outputfile] [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:90
#: ../../source/commands/peerlifecycle.md:118
#: ../../source/commands/peerlifecycle.md:143
#: ../../source/commands/peerlifecycle.md:169
msgid ""
"The fully qualified path to the connection profile that provides the "
"necessary connection information for the network. Note: currently only "
"supported for providing peer connection information"
msgstr ""

#: ../../source/commands/peerlifecycle.md:91
msgid ""
"help for package --label string                   The package label "
"contains a human-readable description of the package"
msgstr ""

#: ../../source/commands/peerlifecycle.md:94
msgid ""
"Path to the chaincode --peerAddresses stringArray      The addresses of "
"the peers to connect to --tlsRootCertFiles stringArray   If TLS is "
"enabled, the paths to the TLS root cert files of the peers to connect to."
" The order and number of certs specified should match the --peerAddresses"
" flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:110
msgid "## peer lifecycle chaincode install ``` Install a chaincode on a peer."
msgstr ""

#: ../../source/commands/peerlifecycle.md:115
msgid "peer lifecycle chaincode install [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:119
msgid ""
"help for install --peerAddresses stringArray      The addresses of the "
"peers to connect to --tlsRootCertFiles stringArray   If TLS is enabled, "
"the paths to the TLS root cert files of the peers to connect to. The "
"order and number of certs specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:135
msgid ""
"## peer lifecycle chaincode queryinstalled ``` Query the installed "
"chaincodes on a peer."
msgstr ""

#: ../../source/commands/peerlifecycle.md:140
msgid "peer lifecycle chaincode queryinstalled [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:144
msgid "help for queryinstalled"
msgstr ""

#: ../../source/commands/peerlifecycle.md:145
#: ../../source/commands/peerlifecycle.md:340
msgid ""
"The output format for query results. Default is human-readable plain-"
"text. json is currently the only supported format. --peerAddresses "
"stringArray      The addresses of the peers to connect to "
"--tlsRootCertFiles stringArray   If TLS is enabled, the paths to the TLS "
"root cert files of the peers to connect to. The order and number of certs"
" specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:161
msgid ""
"## peer lifecycle chaincode getinstalledpackage ``` Get an installed "
"chaincode package from a peer."
msgstr ""

#: ../../source/commands/peerlifecycle.md:166
msgid "peer lifecycle chaincode getinstalledpackage [outputfile] [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:170
msgid ""
"help for getinstalledpackage --output-directory string        The output "
"directory to use when writing a chaincode install package to disk. "
"Default is the current working directory. --package-id string"
"              The identifier of the chaincode install package "
"--peerAddresses stringArray      The addresses of the peers to connect to"
" --tlsRootCertFiles stringArray   If TLS is enabled, the paths to the TLS"
" root cert files of the peers to connect to. The order and number of "
"certs specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:188
msgid ""
"## peer lifecycle chaincode approveformyorg ``` Approve the chaincode "
"definition for my organization."
msgstr ""

#: ../../source/commands/peerlifecycle.md:193
msgid "peer lifecycle chaincode approveformyorg [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:196
#: ../../source/commands/peerlifecycle.md:263
#: ../../source/commands/peerlifecycle.md:299
msgid ""
"The endorsement policy associated to this chaincode specified as a "
"channel config policy reference"
msgstr ""

#: ../../source/commands/peerlifecycle.md:197
#: ../../source/commands/peerlifecycle.md:264
#: ../../source/commands/peerlifecycle.md:300
msgid ""
"The channel on which this command should be executed --collections-config"
" string      The fully qualified path to the collection JSON file "
"including the file name --connectionProfile string       The fully "
"qualified path to the connection profile that provides the necessary "
"connection information for the network. Note: currently only supported "
"for providing peer connection information"
msgstr ""

#: ../../source/commands/peerlifecycle.md:200
#: ../../source/commands/peerlifecycle.md:267
#: ../../source/commands/peerlifecycle.md:303
msgid "The name of the endorsement plugin to be used for this chaincode"
msgstr ""

#: ../../source/commands/peerlifecycle.md:201
msgid ""
"help for approveformyorg --init-required                  Whether the "
"chaincode requires invoking 'init'"
msgstr ""

#: ../../source/commands/peerlifecycle.md:203
msgid ""
"Name of the chaincode --package-id string              The identifier of "
"the chaincode install package --peerAddresses stringArray      The "
"addresses of the peers to connect to --sequence int                   The"
" sequence number of the chaincode definition for the channel --signature-"
"policy string        The endorsement policy associated to this chaincode "
"specified as a signature policy --tlsRootCertFiles stringArray   If TLS "
"is enabled, the paths to the TLS root cert files of the peers to connect "
"to. The order and number of certs specified should match the "
"--peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:209
#: ../../source/commands/peerlifecycle.md:276
#: ../../source/commands/peerlifecycle.md:311
msgid "The name of the validation plugin to be used for this chaincode"
msgstr ""

#: ../../source/commands/peerlifecycle.md:210
#: ../../source/commands/peerlifecycle.md:312
msgid ""
"Version of the chaincode --waitForEvent                   Whether to wait"
" for the event from each peer's deliver filtered service signifying that "
"the transaction has been committed successfully (default true) "
"--waitForEventTimeout duration   Time to wait for the event from each "
"peer's deliver filtered service signifying that the 'invoke' transaction "
"has been committed successfully (default 30s)"
msgstr ""

#: ../../source/commands/peerlifecycle.md:226
msgid ""
"## peer lifecycle chaincode queryapproved ``` Query an organization's "
"approved chaincode definition from its peer."
msgstr ""

#: ../../source/commands/peerlifecycle.md:231
msgid "peer lifecycle chaincode queryapproved [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:234
#: ../../source/commands/peerlifecycle.md:336
msgid ""
"The channel on which this command should be executed --connectionProfile "
"string       The fully qualified path to the connection profile that "
"provides the necessary connection information for the network. Note: "
"currently only supported for providing peer connection information"
msgstr ""

#: ../../source/commands/peerlifecycle.md:236
msgid "help for queryapproved"
msgstr ""

#: ../../source/commands/peerlifecycle.md:238
msgid ""
"The output format for query results. Default is human-readable plain-"
"text. json is currently the only supported format. --peerAddresses "
"stringArray      The addresses of the peers to connect to --sequence int"
"                   The sequence number of the chaincode definition for "
"the channel --tlsRootCertFiles stringArray   If TLS is enabled, the paths"
" to the TLS root cert files of the peers to connect to. The order and "
"number of certs specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:255
msgid ""
"## peer lifecycle chaincode checkcommitreadiness ``` Check whether a "
"chaincode definition is ready to be committed on a channel."
msgstr ""

#: ../../source/commands/peerlifecycle.md:260
msgid "peer lifecycle chaincode checkcommitreadiness [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:268
msgid ""
"help for checkcommitreadiness --init-required                  Whether "
"the chaincode requires invoking 'init'"
msgstr ""

#: ../../source/commands/peerlifecycle.md:271
msgid ""
"The output format for query results. Default is human-readable plain-"
"text. json is currently the only supported format. --peerAddresses "
"stringArray      The addresses of the peers to connect to --sequence int"
"                   The sequence number of the chaincode definition for "
"the channel --signature-policy string        The endorsement policy "
"associated to this chaincode specified as a signature policy "
"--tlsRootCertFiles stringArray   If TLS is enabled, the paths to the TLS "
"root cert files of the peers to connect to. The order and number of certs"
" specified should match the --peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:277
msgid "Version of the chaincode"
msgstr ""

#: ../../source/commands/peerlifecycle.md:291
msgid ""
"## peer lifecycle chaincode commit ``` Commit the chaincode definition on"
" the channel."
msgstr ""

#: ../../source/commands/peerlifecycle.md:296
msgid "peer lifecycle chaincode commit [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:304
msgid ""
"help for commit --init-required                  Whether the chaincode "
"requires invoking 'init'"
msgstr ""

#: ../../source/commands/peerlifecycle.md:306
msgid ""
"Name of the chaincode --peerAddresses stringArray      The addresses of "
"the peers to connect to --sequence int                   The sequence "
"number of the chaincode definition for the channel --signature-policy "
"string        The endorsement policy associated to this chaincode "
"specified as a signature policy --tlsRootCertFiles stringArray   If TLS "
"is enabled, the paths to the TLS root cert files of the peers to connect "
"to. The order and number of certs specified should match the "
"--peerAddresses flag"
msgstr ""

#: ../../source/commands/peerlifecycle.md:328
msgid ""
"## peer lifecycle chaincode querycommitted ``` Query the committed "
"chaincode definitions by channel on a peer. Optional: provide a chaincode"
" name to query a specific definition."
msgstr ""

#: ../../source/commands/peerlifecycle.md:333
msgid "peer lifecycle chaincode querycommitted [flags]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:338
msgid "help for querycommitted"
msgstr ""

#: ../../source/commands/peerlifecycle.md:358
msgid "### peer lifecycle chaincode package example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:360
msgid ""
"A chaincode needs to be packaged before it can be installed on your "
"peers. This example uses the `peer lifecycle chaincode package` command "
"to package a Go chaincode."
msgstr ""

#: ../../source/commands/peerlifecycle.md:364
msgid ""
"Use the `--path` flag to indicate the location of the chaincode. The path"
" must be a fully qualified path or a path relative to your present "
"working directory."
msgstr ""

#: ../../source/commands/peerlifecycle.md:366
msgid ""
"Use the `--label` flag to provide a chaincode package label of `myccv1` "
"that your organization will use to identify the package."
msgstr ""

#: ../../source/commands/peerlifecycle.md:369
msgid ""
"``` peer lifecycle chaincode package mycc.tar.gz --path $CHAINCODE_DIR "
"--lang golang --label myccv1 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:373
msgid "### peer lifecycle chaincode install example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:375
msgid ""
"After the chaincode is packaged, you can use the `peer chaincode install`"
" command to install the chaincode on your peers."
msgstr ""

#: ../../source/commands/peerlifecycle.md:378
msgid ""
"Install the `mycc.tar.gz ` package on `peer0.org1.example.com:7051` (the "
"peer defined by `--peerAddresses`)."
msgstr ""

#: ../../source/commands/peerlifecycle.md:381
msgid ""
"``` peer lifecycle chaincode install mycc.tar.gz --peerAddresses "
"peer0.org1.example.com:7051 ``` If successful, the command will return "
"the package identifier. The package ID is the package label combined with"
" a hash of the chaincode package taken by the peer. ``` 2019-03-13 "
"13:48:53.691 UTC [cli.lifecycle.chaincode] submitInstallProposal -> INFO "
"001 Installed remotely: response:<status:200 "
"payload:\"\\nEmycc:ebd89878c2bbccf62f68c36072626359376aa83c36435a058d453e8dbfd894cc\""
" > 2019-03-13 13:48:53.691 UTC [cli.lifecycle.chaincode] "
"submitInstallProposal -> INFO 002 Chaincode code package identifier: "
"mycc:a7ca45a7cc85f1d89c905b775920361ed089a364e12a9b6d55ba75c965ddd6a9 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:392
msgid "### peer lifecycle chaincode queryinstalled example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:394
msgid ""
"You need to use the chaincode package identifier to approve a chaincode "
"definition for your organization. You can find the package ID for the "
"chaincodes you have installed by using the `peer lifecycle chaincode "
"queryinstalled` command:"
msgstr ""

#: ../../source/commands/peerlifecycle.md:399
msgid ""
"``` peer lifecycle chaincode queryinstalled --peerAddresses "
"peer0.org1.example.com:7051 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:403
msgid ""
"A successful command will return the package ID associated with the "
"package label."
msgstr ""

#: ../../source/commands/peerlifecycle.md:406
msgid ""
"``` Get installed chaincodes on peer: Package ID: "
"myccv1:a7ca45a7cc85f1d89c905b775920361ed089a364e12a9b6d55ba75c965ddd6a9, "
"Label: myccv1 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:411
#: ../../source/commands/peerlifecycle.md:522
#: ../../source/commands/peerlifecycle.md:607
#: ../../source/commands/peerlifecycle.md:679
msgid ""
"You can also use the `--output` flag to have the CLI format the output as"
" JSON."
msgstr ""

#: ../../source/commands/peerlifecycle.md:414
msgid ""
"``` peer lifecycle chaincode queryinstalled --peerAddresses "
"peer0.org1.example.com:7051 --output json ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:418
msgid ""
"If successful, the command will return the chaincodes you have installed "
"as JSON."
msgstr ""

#: ../../source/commands/peerlifecycle.md:420
#: ../../source/commands/peerlifecycle.md:533
#: ../../source/commands/peerlifecycle.md:560
#: ../../source/commands/peerlifecycle.md:619
#: ../../source/commands/peerlifecycle.md:692
#: ../../source/commands/peerlifecycle.md:726
msgid "``` {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:435
msgid "\"installed_chaincodes\": ["
msgstr ""

#: ../../source/commands/peerlifecycle.md:430
#: ../../source/commands/peerlifecycle.md:434
#: ../../source/commands/peerlifecycle.md:736
msgid "{"
msgstr ""

#: ../../source/commands/peerlifecycle.md:424
msgid ""
"\"package_id\": "
"\"mycc_1:aab9981fa5649cfe25369fce7bb5086a69672a631e4f95c4af1b5198fe9f845b\","
" \"label\": \"mycc_1\", \"references\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:432
msgid "\"mychannel\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:431
msgid "\"chaincodes\": ["
msgstr ""

#: ../../source/commands/peerlifecycle.md:430
msgid "\"name\": \"mycc\", \"version\": \"1\""
msgstr ""

#: ../../source/commands/peerlifecycle.md:432
#: ../../source/commands/peerlifecycle.md:434
#: ../../source/commands/peerlifecycle.md:435
#: ../../source/commands/peerlifecycle.md:436
#: ../../source/commands/peerlifecycle.md:546
#: ../../source/commands/peerlifecycle.md:547
#: ../../source/commands/peerlifecycle.md:548
#: ../../source/commands/peerlifecycle.md:571
#: ../../source/commands/peerlifecycle.md:572
#: ../../source/commands/peerlifecycle.md:624
#: ../../source/commands/peerlifecycle.md:704
#: ../../source/commands/peerlifecycle.md:747
msgid "}"
msgstr ""

#: ../../source/commands/peerlifecycle.md:433
#: ../../source/commands/peerlifecycle.md:437
#: ../../source/commands/peerlifecycle.md:748
msgid "]"
msgstr ""

#: ../../source/commands/peerlifecycle.md:441
msgid "### peer lifecycle chaincode getinstalledpackage example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:443
msgid ""
"You can retrieve an installed chaincode package from a peer using the "
"`peer lifecycle chaincode getinstalledpackage` command. Use the package "
"identifier returned by `queryinstalled`."
msgstr ""

#: ../../source/commands/peerlifecycle.md:447
msgid ""
"Use the `--package-id` flag to pass in the chaincode package identifier. "
"Use"
msgstr ""

#: ../../source/commands/peerlifecycle.md:448
msgid ""
"the `--output-directory` flag to specify where to write the chaincode "
"package. If the output directory is not specified, the chaincode package "
"will be written in the current directory."
msgstr ""

#: ../../source/commands/peerlifecycle.md:452
msgid ""
"``` peer lifecycle chaincode getinstalledpackage --package-id "
"myccv1:a7ca45a7cc85f1d89c905b775920361ed089a364e12a9b6d55ba75c965ddd6a9 "
"--output-directory /tmp --peerAddresses peer0.org1.example.com:7051 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:457
msgid "### peer lifecycle chaincode approveformyorg example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:459
msgid ""
"Once the chaincode package has been installed on your peers, you can "
"approve a chaincode definition for your organization. The chaincode "
"definition includes the important parameters of chaincode governance, "
"including the chaincode name, version and the endorsement policy."
msgstr ""

#: ../../source/commands/peerlifecycle.md:464
msgid ""
"Here is an example of the `peer lifecycle chaincode approveformyorg` "
"command, which approves the definition of a chaincode  named `mycc` at "
"version `1.0` on channel `mychannel`."
msgstr ""

#: ../../source/commands/peerlifecycle.md:468
msgid ""
"Use the `--package-id` flag to pass in the chaincode package identifier. "
"Use the `--signature-policy` flag to define an endorsement policy for the"
" chaincode. Use the `init-required` flag to request the execution of the "
"`Init` function to initialize the chaincode."
msgstr ""

#: ../../source/commands/peerlifecycle.md:473
#: ../../source/commands/peerlifecycle.md:486
#: ../../source/commands/peerlifecycle.md:591
#: ../../source/commands/peerlifecycle.md:610
#: ../../source/commands/peerlifecycle.md:637
#: ../../source/commands/peerlifecycle.md:656
#: ../../source/commands/peerlifecycle.md:669
#: ../../source/commands/peerlifecycle.md:684
#: ../../source/commands/peerlifecycle.md:718
msgid ""
"``` export "
"ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example"
".com-cert.pem"
msgstr ""

#: ../../source/commands/peerlifecycle.md:476
msgid ""
"peer lifecycle chaincode approveformyorg  -o orderer.example.com:7050 "
"--tls --cafile $ORDERER_CA --channelID mychannel --name mycc --version "
"1.0 --init-required --package-id "
"myccv1:a7ca45a7cc85f1d89c905b775920361ed089a364e12a9b6d55ba75c965ddd6a9 "
"--sequence 1 --signature-policy \"AND ('Org1MSP.peer','Org2MSP.peer')\""
msgstr ""

#: ../../source/commands/peerlifecycle.md:478
#: ../../source/commands/peerlifecycle.md:491
msgid ""
"2019-03-18 16:04:09.046 UTC [cli.lifecycle.chaincode] InitCmdFactory -> "
"INFO 001 Retrieved channel (mychannel) orderer endpoint: "
"orderer.example.com:7050 2019-03-18 16:04:11.253 UTC [chaincodeCmd] "
"ClientWait -> INFO 002 txid "
"[efba188ca77889cc1c328fc98e0bb12d3ad0abcda3f84da3714471c7c1e6c13c] "
"committed with status (VALID) at peer0.org1.example.com:7051 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:482
msgid ""
"You can also use the `--channel-config-policy` flag use a policy inside "
"the channel configuration as the chaincode endorsement policy. The "
"default endorsement policy is `Channel/Application/Endorsement`"
msgstr ""

#: ../../source/commands/peerlifecycle.md:489
msgid ""
"peer lifecycle chaincode approveformyorg -o orderer.example.com:7050 "
"--tls --cafile $ORDERER_CA --channelID mychannel --name mycc --version "
"1.0 --init-required --package-id "
"myccv1:a7ca45a7cc85f1d89c905b775920361ed089a364e12a9b6d55ba75c965ddd6a9 "
"--sequence 1 --channel-config-policy Channel/Application/Admins"
msgstr ""

#: ../../source/commands/peerlifecycle.md:495
msgid "### peer lifecycle chaincode queryapproved example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:497
msgid ""
"You can query an organization's approved chaincode definition by using "
"the `peer lifecycle chaincode queryapproved` command. You can use this "
"command to see the details (including package ID) of approved chaincode "
"definitions."
msgstr ""

#: ../../source/commands/peerlifecycle.md:500
msgid ""
"Here is an example of the `peer lifecycle chaincode queryapproved` "
"command, which queries the approved definition of a chaincode named "
"`mycc` at sequence number `1` on channel `mychannel`."
msgstr ""

#: ../../source/commands/peerlifecycle.md:504
msgid ""
"``` peer lifecycle chaincode queryapproved -C mychannel -n mycc "
"--sequence 1"
msgstr ""

#: ../../source/commands/peerlifecycle.md:507
msgid ""
"Approved chaincode definition for chaincode 'mycc' on channel "
"'mychannel': sequence: 1, version: 1, init-required: true, package-id: "
"mycc_1:d02f72000e7c0f715840f51cb8d72d70bc1ba230552f8445dded0ec8b6e0b830, "
"endorsement plugin: escc, validation plugin: vscc ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:511
msgid ""
"If NO package is specified for the approved definition, this command will"
" display an empty package ID."
msgstr ""

#: ../../source/commands/peerlifecycle.md:513
msgid ""
"You can also use this command without specifying the sequence number in "
"order to query the latest approved definition (latest: the newer of the "
"currently defined sequence number and the next sequence number)."
msgstr ""

#: ../../source/commands/peerlifecycle.md:515
msgid "``` peer lifecycle chaincode queryapproved -C mychannel -n mycc"
msgstr ""

#: ../../source/commands/peerlifecycle.md:518
msgid ""
"Approved chaincode definition for chaincode 'mycc' on channel "
"'mychannel': sequence: 3, version: 3, init-required: false, package-id: "
"mycc_1:d02f72000e7c0f715840f51cb8d72d70bc1ba230552f8445dded0ec8b6e0b830, "
"endorsement plugin: escc, validation plugin: vscc ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:525
msgid ""
"When querying an approved chaincode definition for which package is "
"specified"
msgstr ""

#: ../../source/commands/peerlifecycle.md:527
msgid ""
"``` peer lifecycle chaincode queryapproved -C mychannel -n mycc "
"--sequence 1 --output json ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:531
msgid ""
"If successful, the command will return a JSON that has the approved "
"chaincode definition for chaincode `mycc` at sequence number `1` on "
"channel `mychannel`."
msgstr ""

#: ../../source/commands/peerlifecycle.md:535
msgid ""
"\"sequence\": 1, \"version\": \"1\", \"endorsement_plugin\": \"escc\", "
"\"validation_plugin\": \"vscc\", \"validation_parameter\": "
"\"EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA==\", \"collections\": "
"{}, \"init_required\": true, \"source\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:545
#: ../../source/commands/peerlifecycle.md:569
msgid "\"Type\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:544
msgid "\"LocalPackage\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:545
msgid ""
"\"package_id\": "
"\"mycc_1:d02f72000e7c0f715840f51cb8d72d70bc1ba230552f8445dded0ec8b6e0b830\""
msgstr ""

#: ../../source/commands/peerlifecycle.md:552
msgid ""
"When querying an approved chaincode definition for which package is NOT "
"specified"
msgstr ""

#: ../../source/commands/peerlifecycle.md:554
msgid ""
"``` peer lifecycle chaincode queryapproved -C mychannel -n mycc "
"--sequence 2 --output json ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:558
msgid ""
"If successful, the command will return a JSON that has the approved "
"chaincode definition for chaincode `mycc` at sequence number `2` on "
"channel `mychannel`."
msgstr ""

#: ../../source/commands/peerlifecycle.md:562
msgid ""
"\"sequence\": 2, \"version\": \"2\", \"endorsement_plugin\": \"escc\", "
"\"validation_plugin\": \"vscc\", \"validation_parameter\": "
"\"EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA==\", \"collections\": "
"{}, \"source\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:570
msgid "\"Unavailable\": {}"
msgstr ""

#: ../../source/commands/peerlifecycle.md:576
msgid "### peer lifecycle chaincode checkcommitreadiness example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:578
msgid ""
"You can check whether a chaincode definition is ready to be committed "
"using the `peer lifecycle chaincode checkcommitreadiness` command, which "
"will return successfully if a subsequent commit of the definition is "
"expected to succeed. It also outputs which organizations have approved "
"the chaincode definition. If an organization has approved the chaincode "
"definition specified in the command, the command will return a value of "
"true. You can use this command to learn whether enough channel members "
"have approved a chaincode definition to meet the "
"`Application/Channel/Endorsement` policy (a majority by default) before "
"the definition can be committed to a channel."
msgstr ""

#: ../../source/commands/peerlifecycle.md:588
msgid ""
"Here is an example of the `peer lifecycle chaincode checkcommitreadiness`"
" command, which checks a chaincode named `mycc` at version `1.0` on "
"channel `mychannel`."
msgstr ""

#: ../../source/commands/peerlifecycle.md:594
msgid ""
"peer lifecycle chaincode checkcommitreadiness -o orderer.example.com:7050"
" --channelID mychannel --tls --cafile $ORDERER_CA --name mycc --version "
"1.0 --init-required --sequence 1 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:597
msgid ""
"If successful, the command will return the organizations that have "
"approved the chaincode definition."
msgstr ""

#: ../../source/commands/peerlifecycle.md:600
msgid ""
"``` Chaincode definition for chaincode 'mycc', version '1.0', sequence "
"'1' on channel 'mychannel' approval status by org: Org1MSP: true Org2MSP:"
" true ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:613
msgid ""
"peer lifecycle chaincode checkcommitreadiness -o orderer.example.com:7050"
" --channelID mychannel --tls --cafile $ORDERER_CA --name mycc --version "
"1.0 --init-required --sequence 1 --output json ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:616
msgid ""
"If successful, the command will return a JSON map that shows if an "
"organization has approved the chaincode definition."
msgstr ""

#: ../../source/commands/peerlifecycle.md:622
msgid "\"Approvals\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:622
#: ../../source/commands/peerlifecycle.md:702
msgid "\"Org1MSP\": true, \"Org2MSP\": true"
msgstr ""

#: ../../source/commands/peerlifecycle.md:628
msgid "### peer lifecycle chaincode commit example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:630
msgid ""
"Once a sufficient number of organizations approve a chaincode definition "
"for their organizations (a majority by default), one organization can "
"commit the definition the channel using the `peer lifecycle chaincode "
"commit` command:"
msgstr ""

#: ../../source/commands/peerlifecycle.md:634
msgid ""
"This command needs to target the peers of other organizations on the "
"channel to collect their organization endorsement for the definition."
msgstr ""

#: ../../source/commands/peerlifecycle.md:640
msgid ""
"peer lifecycle chaincode commit -o orderer.example.com:7050 --channelID "
"mychannel --name mycc --version 1.0 --sequence 1 --init-required --tls "
"--cafile $ORDERER_CA --peerAddresses peer0.org1.example.com:7051 "
"--peerAddresses peer0.org2.example.com:9051"
msgstr ""

#: ../../source/commands/peerlifecycle.md:642
msgid ""
"2019-03-18 16:14:27.258 UTC [chaincodeCmd] ClientWait -> INFO 001 txid "
"[b6f657a14689b27d69a50f39590b3949906b5a426f9d7f0dcee557f775e17882] "
"committed with status (VALID) at peer0.org2.example.com:9051 2019-03-18 "
"16:14:27.321 UTC [chaincodeCmd] ClientWait -> INFO 002 txid "
"[b6f657a14689b27d69a50f39590b3949906b5a426f9d7f0dcee557f775e17882] "
"committed with status (VALID) at peer0.org1.example.com:7051 ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:646
msgid "### peer lifecycle chaincode querycommitted example"
msgstr ""

#: ../../source/commands/peerlifecycle.md:648
msgid ""
"You can query the chaincode definitions that have been committed to a "
"channel by using the `peer lifecycle chaincode querycommitted` command. "
"You can use this command to query the current definition sequence number "
"before upgrading a chaincode."
msgstr ""

#: ../../source/commands/peerlifecycle.md:653
msgid ""
"You need to supply the chaincode name and channel name in order to query "
"a specific chaincode definition and the organizations that have approved "
"it."
msgstr ""

#: ../../source/commands/peerlifecycle.md:659
msgid ""
"peer lifecycle chaincode querycommitted -o orderer.example.com:7050 "
"--channelID mychannel --name mycc --tls --cafile $ORDERER_CA "
"--peerAddresses peer0.org1.example.com:7051"
msgstr ""

#: ../../source/commands/peerlifecycle.md:661
msgid ""
"Committed chaincode definition for chaincode 'mycc' on channel "
"'mychannel': Version: 1, Sequence: 1, Endorsement Plugin: escc, "
"Validation Plugin: vscc Approvals: [Org1MSP: true, Org2MSP: true] ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:666
msgid "You can also specify just the channel name in order to query all chaincode"
msgstr ""

#: ../../source/commands/peerlifecycle.md:667
msgid "definitions on that channel."
msgstr ""

#: ../../source/commands/peerlifecycle.md:672
msgid ""
"peer lifecycle chaincode querycommitted -o orderer.example.com:7050 "
"--channelID mychannel --tls --cafile $ORDERER_CA --peerAddresses "
"peer0.org1.example.com:7051"
msgstr ""

#: ../../source/commands/peerlifecycle.md:674
msgid ""
"Committed chaincode definitions on channel 'mychannel': Name: mycc, "
"Version: 1, Sequence: 1, Endorsement Plugin: escc, Validation Plugin: "
"vscc Name: yourcc, Version: 2, Sequence: 3, Endorsement Plugin: escc, "
"Validation Plugin: vscc ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:682
msgid "For querying a specific chaincode definition"
msgstr ""

#: ../../source/commands/peerlifecycle.md:687
msgid ""
"peer lifecycle chaincode querycommitted -o orderer.example.com:7050 "
"--channelID mychannel --name mycc --tls --cafile $ORDERER_CA "
"--peerAddresses peer0.org1.example.com:7051 --output json ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:690
msgid ""
"If successful, the command will return a JSON that has committed "
"chaincode definition for chaincode 'mycc' on channel 'mychannel'."
msgstr ""

#: ../../source/commands/peerlifecycle.md:694
msgid ""
"\"sequence\": 1, \"version\": \"1\", \"endorsement_plugin\": \"escc\", "
"\"validation_plugin\": \"vscc\", \"validation_parameter\": "
"\"EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA==\", \"collections\": "
"{}, \"init_required\": true, \"approvals\": {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:708
msgid ""
"The `validation_parameter` is base64 encoded. An example of the command "
"to decode it is as follows."
msgstr ""

#: ../../source/commands/peerlifecycle.md:710
msgid "``` echo EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA== | base64 -d"
msgstr ""

#: ../../source/commands/peerlifecycle.md:713
msgid "/Channel/Application/Endorsement"
msgstr ""

#: ../../source/commands/peerlifecycle.md:716
msgid "For querying all chaincode definitions on that channel"
msgstr ""

#: ../../source/commands/peerlifecycle.md:721
msgid ""
"peer lifecycle chaincode querycommitted -o orderer.example.com:7050 "
"--channelID mychannel --tls --cafile $ORDERER_CA --peerAddresses "
"peer0.org1.example.com:7051 --output json ```"
msgstr ""

#: ../../source/commands/peerlifecycle.md:724
msgid ""
"If successful, the command will return a JSON that has committed "
"chaincode definitions on channel 'mychannel'."
msgstr ""

#: ../../source/commands/peerlifecycle.md:746
msgid "\"chaincode_definitions\": ["
msgstr ""

#: ../../source/commands/peerlifecycle.md:730
msgid ""
"\"name\": \"mycc\", \"sequence\": 1, \"version\": \"1\", "
"\"endorsement_plugin\": \"escc\", \"validation_plugin\": \"vscc\", "
"\"validation_parameter\": "
"\"EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA==\", \"collections\": "
"{}, \"init_required\": true"
msgstr ""

#: ../../source/commands/peerlifecycle.md:738
msgid "}, {"
msgstr ""

#: ../../source/commands/peerlifecycle.md:740
msgid ""
"\"name\": \"yourcc\", \"sequence\": 3, \"version\": \"2\", "
"\"endorsement_plugin\": \"escc\", \"validation_plugin\": \"vscc\", "
"\"validation_parameter\": "
"\"EiAvQ2hhbm5lbC9BcHBsaWNhdGlvbi9FbmRvcnNlbWVudA==\", \"collections\": {}"
msgstr ""

#: ../../source/commands/peernode.md:1
msgid "# peer node"
msgstr ""

#: ../../source/commands/peernode.md:3
msgid ""
"The `peer node` command allows an administrator to start a peer node, "
"reset all channels in a peer to the genesis block, or rollback a channel "
"to a given block number."
msgstr ""

#: ../../source/commands/peernode.md:9
msgid "The `peer node` command has the following subcommands:"
msgstr ""

#: ../../source/commands/peernode.md:12
msgid "reset"
msgstr ""

#: ../../source/commands/peernode.md:13
msgid "rollback"
msgstr ""

#: ../../source/commands/peernode.md:15
msgid "## peer node start ``` Starts a node that interacts with the network."
msgstr ""

#: ../../source/commands/peernode.md:20
msgid "peer node start [flags]"
msgstr ""

#: ../../source/commands/peernode.md:23
msgid ""
"help for start --peer-chaincodedev   start peer in chaincode development "
"mode"
msgstr ""

#: ../../source/commands/peernode.md:28
msgid ""
"## peer node reset ``` Resets all channels to the genesis block. When the"
" command is executed, the peer must be offline. When the peer starts "
"after the reset, it will receive blocks starting with block number one "
"from an orderer or another peer to rebuild the block store and state "
"database."
msgstr ""

#: ../../source/commands/peernode.md:33
msgid "peer node reset [flags]"
msgstr ""

#: ../../source/commands/peernode.md:36
msgid "help for reset"
msgstr ""

#: ../../source/commands/peernode.md:40
msgid ""
"## peer node rollback ``` Rolls back a channel to a specified block "
"number. When the command is executed, the peer must be offline. When the "
"peer starts after the rollback, it will receive blocks, which got removed"
" during the rollback, from an orderer or another peer to rebuild the "
"block store and state database."
msgstr ""

#: ../../source/commands/peernode.md:45
msgid "peer node rollback [flags]"
msgstr ""

#: ../../source/commands/peernode.md:48
msgid "Block number to which the channel needs to be rolled back to."
msgstr ""

#: ../../source/commands/peernode.md:49
msgid "Channel to rollback."
msgstr ""

#: ../../source/commands/peernode.md:50
msgid "help for rollback"
msgstr ""

#: ../../source/commands/peernode.md:55
msgid "### peer node start example"
msgstr ""

#: ../../source/commands/peernode.md:57 ../../source/commands/peernode.md:76
msgid "The following command:"
msgstr ""

#: ../../source/commands/peernode.md:59
msgid "``` peer node start --peer-chaincodedev ```"
msgstr ""

#: ../../source/commands/peernode.md:63
msgid ""
"starts a peer node in chaincode development mode. Normally chaincode "
"containers are started and maintained by peer. However in chaincode "
"development mode, chaincode is built and started by the user. This mode "
"is useful during chaincode development phase for iterative development."
msgstr ""

#: ../../source/commands/peernode.md:66
msgid "### peer node reset example"
msgstr ""

#: ../../source/commands/peernode.md:68
msgid "``` peer node reset ```"
msgstr ""

#: ../../source/commands/peernode.md:72
msgid ""
"resets all channels in the peer to the genesis block, i.e., the first "
"block in the channel. The command also records the pre-reset height of "
"each channel in the file system. Note that the peer process should be "
"stopped while executing this command. If the peer process is running, "
"this command detects that and returns an error instead of performing the "
"reset. When the peer is started after performing the reset, the peer will"
" fetch the blocks for each channel which were removed by the reset "
"command (either from other peers or orderers) and commit the blocks up to"
" the pre-reset height. Until all channels reach the pre-reset height, the"
" peer will not endorse any transactions."
msgstr ""

#: ../../source/commands/peernode.md:74
msgid "### peer node rollback example"
msgstr ""

#: ../../source/commands/peernode.md:78
msgid "``` peer node rollback -c ch1 -b 150 ```"
msgstr ""

#: ../../source/commands/peernode.md:82
msgid ""
"rolls back the channel ch1 to block number 150. The command also records "
"the pre-rolled back height of channel ch1 in the file system. Note that "
"the peer should be stopped while executing this command. If the peer "
"process is running, this command detects that and returns an error "
"instead of performing the rollback. When the peer is started after "
"performing the rollback, the peer will fetch the blocks for channel ch1 "
"which were removed by the rollback command (either from other peers or "
"orderers) and commit the blocks up to the pre-rolled back height. Until "
"the channel ch1 reaches the pre-rolled back height, the peer will not "
"endorse any transaction for any channel."
msgstr ""

#: ../../source/commands/peerversion.md:1
msgid "# peer version"
msgstr ""

#: ../../source/commands/peerversion.md:3
msgid ""
"The `peer version` command displays the version information of the peer. "
"It displays version, Commit SHA, Go version, OS/architecture, and "
"chaincode information. For example:"
msgstr ""

#: ../../source/commands/peerversion.md:14
msgid "peer:"
msgstr ""

#: ../../source/commands/peerversion.md:9
msgid ""
"Version: 2.1.0 Commit SHA: b78d79b Go version: go1.14.1 OS/Arch: "
"linux/amd64 Chaincode:"
msgstr ""

#: ../../source/commands/peerversion.md:14
msgid "Base Docker Label: org.hyperledger.fabric Docker Namespace: hyperledger"
msgstr ""

#: ../../source/commands/peerversion.md:20
msgid "The `peer version` command takes no arguments."
msgstr ""

#: ../../source/commands/peerversion.md:22
msgid "## peer version ``` Print current version of the fabric peer server."
msgstr ""

#: ../../source/commands/peerversion.md:27
msgid "peer version [flags]"
msgstr ""

#: ../../source/commands/peerversion.md:30
msgid "help for version"
msgstr ""

