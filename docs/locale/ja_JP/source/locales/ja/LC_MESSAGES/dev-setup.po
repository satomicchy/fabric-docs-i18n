# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, hyperledger
# This file is distributed under the same license as the
# hyperledger-fabricdocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: hyperledger-fabricdocs master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-19 19:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/dev-setup/build.rst:2
msgid "Building Hyperledger Fabric"
msgstr ""

#: ../../source/dev-setup/build.rst:4
msgid ""
"The following instructions assume that you have already set up your "
":doc:`development environment <devenv>`."
msgstr ""

#: ../../source/dev-setup/build.rst:7
msgid "To build Hyperledger Fabric:"
msgstr ""

#: ../../source/dev-setup/build.rst:14
msgid "Building the documentation"
msgstr ""

#: ../../source/dev-setup/build.rst:16
msgid ""
"If you are contributing to the documentation, you can build the Fabric "
"documentation on your local machine. This allows you to check the "
"formatting of your changes using your web browser before you open a pull "
"request."
msgstr ""

#: ../../source/dev-setup/build.rst:20
msgid ""
"You need to download the following prerequisites before you can build the"
" documentation:"
msgstr ""

#: ../../source/dev-setup/build.rst:23
msgid "`Python 3.7 <https://wiki.python.org/moin/BeginnersGuide/Download>`__"
msgstr ""

#: ../../source/dev-setup/build.rst:24
msgid "`Pipenv <https://pipenv.readthedocs.io/en/latest/#install-pipenv-today>`__"
msgstr ""

#: ../../source/dev-setup/build.rst:26
msgid ""
"After you make your updates to the documentation source files, you can "
"generate a build that includes your changes by running the following "
"commands:"
msgstr ""

#: ../../source/dev-setup/build.rst:36
msgid ""
"This will generate all the html files in the ``docs/build/html`` folder. "
"You can open any file to start browsing the updated documentation using "
"your browser. If you want to make additional edits to the documentation, "
"you can rerun ``make html`` to incorporate the changes."
msgstr ""

#: ../../source/dev-setup/build.rst:42
msgid "Running the unit tests"
msgstr ""

#: ../../source/dev-setup/build.rst:44
msgid "Use the following command to run all unit tests:"
msgstr ""

#: ../../source/dev-setup/build.rst:50
msgid ""
"To run a subset of tests, set the TEST_PKGS environment variable. Specify"
" a list of packages (separated by space), for example:"
msgstr ""

#: ../../source/dev-setup/build.rst:58
msgid ""
"To run a specific test use the ``-run RE`` flag where RE is a regular "
"expression that matches the test case name. To run tests with verbose "
"output use the ``-v`` flag. For example, to run the ``TestGetFoo`` test "
"case, change to the directory containing the ``foo_test.go`` and "
"call/execute"
msgstr ""

#: ../../source/dev-setup/build.rst:70
msgid "Running Node.js Client SDK Unit Tests"
msgstr ""

#: ../../source/dev-setup/build.rst:72
msgid ""
"You must also run the Node.js unit tests to ensure that the Node.js "
"client SDK is not broken by your changes. To run the Node.js unit tests, "
"follow the instructions `here <https://github.com/hyperledger/fabric-sdk-"
"node/blob/master/README.md>`__."
msgstr ""

#: ../../source/dev-setup/build.rst:78
msgid "Configuration"
msgstr ""

#: ../../source/dev-setup/build.rst:80
msgid ""
"Configuration utilizes the `viper <https://github.com/spf13/viper>`__ and"
" `cobra <https://github.com/spf13/cobra>`__ libraries."
msgstr ""

#: ../../source/dev-setup/build.rst:83
msgid ""
"There is a **core.yaml** file that contains the configuration for the "
"peer process. Many of the configuration settings can be overridden on the"
" command line by setting ENV variables that match the configuration "
"setting, but by prefixing with *'CORE\\_'*. For example, setting "
"`peer.networkId` can be accomplished with:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:2
msgid "Setting up the development environment"
msgstr ""

#: ../../source/dev-setup/devenv.rst:5
msgid "Prerequisites"
msgstr ""

#: ../../source/dev-setup/devenv.rst:7
msgid "`Git client <https://git-scm.com/downloads>`__"
msgstr ""

#: ../../source/dev-setup/devenv.rst:8
msgid "`Go <https://golang.org/dl/>`__ version 1.14.x"
msgstr ""

#: ../../source/dev-setup/devenv.rst:9
msgid "`Docker <https://docs.docker.com/get-docker/>`__ version 18.03 or later"
msgstr ""

#: ../../source/dev-setup/devenv.rst:10
msgid ""
"(macOS) `Xcode Command Line Tools "
"<https://developer.apple.com/downloads/>`__"
msgstr ""

#: ../../source/dev-setup/devenv.rst:11
msgid "`SoftHSM <https://github.com/opendnssec/SoftHSMv2>`__"
msgstr ""

#: ../../source/dev-setup/devenv.rst:12
msgid "`jq <https://stedolan.github.io/jq/download/>`__"
msgstr ""

#: ../../source/dev-setup/devenv.rst:16
msgid "Steps"
msgstr ""

#: ../../source/dev-setup/devenv.rst:19
msgid "Install the Prerequisites"
msgstr ""

#: ../../source/dev-setup/devenv.rst:21
msgid ""
"For macOS, we recommend using `Homebrew <https://brew.sh>`__ to manage "
"the development prereqs. The Xcode command line tools will be installed "
"as part of the Homebrew installation."
msgstr ""

#: ../../source/dev-setup/devenv.rst:25
msgid ""
"Once Homebrew is ready, installing the necessary prerequisites is very "
"easy:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:32
msgid ""
"Docker Desktop must be launched to complete the installation so be sure "
"to open the application after installing it:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:40
msgid "Developing on Windows"
msgstr ""

#: ../../source/dev-setup/devenv.rst:42
msgid ""
"On Windows 10 you should use the native Docker distribution and you may "
"use the Windows PowerShell. However, for the ``binaries`` command to "
"succeed you will still need to have the ``uname`` command available. You "
"can get it as part of Git but beware that only the 64bit version is "
"supported."
msgstr ""

#: ../../source/dev-setup/devenv.rst:48
msgid "Before running any ``git clone`` commands, run the following commands:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:55
msgid "You can check the setting of these parameters with the following commands:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:62
msgid "These need to be ``false`` and ``true`` respectively."
msgstr ""

#: ../../source/dev-setup/devenv.rst:64
msgid ""
"The ``curl`` command that comes with Git and Docker Toolbox is old and "
"does not handle properly the redirect used in :doc:`../getting_started`. "
"Make sure you have and use a newer version which can be downloaded from "
"the `cURL downloads page <https://curl.haxx.se/download.html>`__"
msgstr ""

#: ../../source/dev-setup/devenv.rst:71
msgid "Clone the Hyperledger Fabric source"
msgstr ""

#: ../../source/dev-setup/devenv.rst:73
msgid ""
"First navigate to https://github.com/hyperledger/fabric and fork the "
"fabric repository using the fork button in the top-right corner. After "
"forking, clone the repository."
msgstr ""

#: ../../source/dev-setup/devenv.rst:84
msgid ""
"If you are running Windows, before cloning the repository, run the "
"following command:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:91
msgid ""
"If ``core.autocrlf`` is set to ``true``, you must set it to ``false`` by "
"running:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:100
msgid "Configure SoftHSM"
msgstr ""

#: ../../source/dev-setup/devenv.rst:102
msgid ""
"A PKCS #11 cryptographic token implementation is required to run the unit"
" tests. The PKCS #11 API is used by the bccsp component of Fabric to "
"interact with hardware security modules (HSMs) that store cryptographic "
"information and perform cryptographic computations.  For test "
"environments, SoftHSM can be used to satisfy this requirement."
msgstr ""

#: ../../source/dev-setup/devenv.rst:108
msgid ""
"SoftHSM generally requires additional configuration before it can be "
"used. For example, the default configuration will attempt to store token "
"data in a system directory that unprivileged users are unable to write "
"to."
msgstr ""

#: ../../source/dev-setup/devenv.rst:112
msgid ""
"SoftHSM configuration typically involves copying ``/etc/softhsm2.conf`` "
"to ``$HOME/.config/softhsm2/softhsm2.conf`` and changing "
"``directories.tokendir`` to an appropriate location. Please see the man "
"page for ``softhsm2.conf`` for details."
msgstr ""

#: ../../source/dev-setup/devenv.rst:117
msgid ""
"After SoftHSM has been configured, the following command can be used to "
"initialize the token required by the unit tests:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:124
msgid ""
"If tests are unable to locate the libsofthsm2.so library in your "
"environment, specify the library path, the PIN, and the label of your "
"token in the appropriate environment variables. For example, on macOS:"
msgstr ""

#: ../../source/dev-setup/devenv.rst:135
msgid "Install the development tools"
msgstr ""

#: ../../source/dev-setup/devenv.rst:137
msgid ""
"Once the repository is cloned, you can use ``make`` to install some of "
"the tools used in the development environment. By default, these tools "
"will be installed into ``$HOME/go/bin``. Please be sure your ``PATH`` "
"includes that directory."
msgstr ""

#: ../../source/dev-setup/devenv.rst:146
msgid ""
"After installing the tools, the build environment can be verified by "
"running a few commands."
msgstr ""

#: ../../source/dev-setup/devenv.rst:154
msgid "If those commands completely successfully, you're ready to Go!"
msgstr ""

#: ../../source/dev-setup/devenv.rst:156
msgid ""
"If you plan to use the Hyperledger Fabric application SDKs then be sure "
"to check out their prerequisites in the Node.js SDK `README "
"<https://github.com/hyperledger/fabric-sdk-node#build-and-test>`__ and "
"Java SDK `README <https://github.com/hyperledger/fabric-gateway-"
"java/blob/master/README.md>`__."
msgstr ""

